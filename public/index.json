[{"content":"翻译自Derek Sivers\n在确认下一根藤条能支持你的重量之前，不要放开手中的藤条。 不要停顿，保持冲劲。 ","permalink":"/post/2014-04-10-tarzan/","summary":"\u003cp\u003e翻译自\u003ca href=\"http://sivers.org/tarzan\"\u003eDerek Sivers\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003col\u003e\n\u003cli\u003e在确认下一根藤条能支持你的重量之前，不要放开手中的藤条。\u003c/li\u003e\n\u003c/ol\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003e不要停顿，保持冲劲。\u003c/li\u003e\n\u003c/ol\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/tarzan/tarzan.gif\"\u003e\u003c/p\u003e","title":"想跳槽？学学人猿泰山"},{"content":"本文是[系列]({% post_url 2014-03-26-python-1 %})的第二篇。\n##rest服务 这里有简介 ##json Json\nJson与pojo ###Python处理json的库\nimport json #基本库 import simplejson #需用pip安装 Json-\u0026gt;python object：\njson.loads(string_of_json) Python object-\u0026gt;json:\nJson.dumps(json, indent=2) #indent为缩进空格数 ##Requests：http for humans 这里有中文简介\n个人认为，requests是对Python价值观最好的体现。\n##示例2 pm2.5 问题：寻找可用的api，获取城市的pm2.5及空气质量数据\n知识点：用requests写rest客户端\n子问题1：寻找可用的api\n通过google，找到这个有态度的网站 子问题2： 使用api\n子问题3：结果缓存与定时获取\n代码如下\n#encoding=utf-8 u\u0026#39;\u0026#39;\u0026#39; pm25.py Usage: pm25.py \u0026lt;cityname\u0026gt; Options: \u0026lt;cityname\u0026gt; 城市名 \u0026#39;\u0026#39;\u0026#39; from docopt import docopt def wget_pm25(city): token=\u0026#34;5j1znBVAsnSf5xQyNQyq\u0026#34; import requests as r result=r.get(\u0026#34;http://www.pm25.in/api/querys/pm2_5.json\u0026#34;,params={ \u0026#34;city\u0026#34;:city, \u0026#34;token\u0026#34;:token, }) return result.json() def needs_refresh(filename,timeout=3600): return False import os,time mtime=os.path.getmtime(filename) now=time.time() return now-mtime\u0026gt;timeout def get_pm25(city): filename=\u0026#39;pm25.data.{}.json\u0026#39;.format(city) import os,json data=None if os.path.isfile(filename) and not needs_refresh(filename): data=file(filename,\u0026#39;r\u0026#39;).read() data=json.loads(data) else: data=wget_pm25(city) if type(data)==type({}): print data[\u0026#39;error\u0026#39;] return -1 else: file(filename,\u0026#39;w\u0026#39;).write(json.dumps(data,indent=2)) return data[-1][\u0026#34;pm2_5\u0026#34;] if __name__ == \u0026#39;__main__\u0026#39;: args=docopt(__doc__) cities=args[\u0026#39;\u0026lt;cityname\u0026gt;\u0026#39;] print get_pm25(args[\u0026#39;\u0026lt;cityname\u0026gt;\u0026#39;]) ##示例3 使用flask-rest搭建rest服务 flask-rest 是一个使用flash框架搭建rest服务的工具，使用方法如下：\n安装pip，方法见这个网页\npip install flask-restful\nhello flask-rest\nfrom flask import Flask from flask.ext import restful app = Flask(__name__) api = restful.Api(app) class HelloWorld(restful.Resource): def get(self): return {\u0026#39;hello\u0026#39;: \u0026#39;world\u0026#39;} api.add_resource(HelloWorld, \u0026#39;/\u0026#39;) if __name__ == \u0026#39;__main__\u0026#39;: app.run(debug=True) 4.在此基础上调用pm25.py，并且把\u0026lt;cityname\u0026gt;作为http get的参数传递\n代码如下：\nfrom flask import Flask from flask.ext import restful app = Flask(__name__) api = restful.Api(app) class PM25(restful.Resource): def get(self,city): import pm25 res=pm25.get_pm25(city) return {city: res} api.add_resource(PM25, \u0026#39;/pm25/\u0026lt;string:city\u0026gt;\u0026#39;) if __name__ == \u0026#39;__main__\u0026#39;: app.run(debug=True) ##思考题2\n写一个天气服务\n输入:\nhttp://\u0026lt;hostname\u0026gt;/\u0026lt;city_name\u0026gt;\n输出json：\n{ \u0026#34;city_name\u0026#34;:\u0026#34;beijing\u0026#34;, \u0026#34;high_temperature\u0026#34;:\u0026#34;5\u0026#34;, \u0026#34;low_temperature\u0026#34;:\u0026#34;-3\u0026#34;, } 数据源可选择如下api：\nhttp://www.thinkpage.cn/weather/api/#all.json\nhttp://li600-131.members.linode.com/mapi/?term=beijing\u0026amp;jsoncallback=jQuery17100569556609261781_1363159265751\nhttp://blog.csdn.net/duxinfeng2010/article/details/7830136\n也可以自己找。\n##拓展阅读\nPython Shortcuts for the Python Beginner\n","permalink":"/post/2014-03-26-python-2/","summary":"\u003cp\u003e本文是[系列]({% post_url 2014-03-26-python-1 %})的第二篇。\u003c/p\u003e\n\u003cp\u003e##rest服务\n\u003ca href=\"http://www.cnblogs.com/shanyou/archive/2012/05/12/2496959.html\"\u003e这里\u003c/a\u003e有简介\n##json\n\u003ca href=\"http://json.org/json-zh.html\"\u003eJson\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://blog.csdn.net/kevonz/article/details/5111550\"\u003eJson与pojo\u003c/a\u003e\n###Python处理json的库\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e json  \u003cspan style=\"color:#75715e\"\u003e#基本库\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e simplejson  \u003cspan style=\"color:#75715e\"\u003e#需用pip安装\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eJson-\u0026gt;python object：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejson\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eloads(string_of_json)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePython object-\u0026gt;json:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eJson\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003edumps(json, indent\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e) \u003cspan style=\"color:#75715e\"\u003e#indent为缩进空格数 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e##Requests：http for humans\n\u003ca href=\"http://cn.python-requests.org/en/latest/user/quickstart.html\"\u003e这里\u003c/a\u003e有中文简介\u003c/p\u003e\n\u003cp\u003e个人认为，requests是对\u003ca href=\"http://cn.python-requests.org/en/latest/user/intro.html#id2\"\u003ePython价值观\u003c/a\u003e最好的体现。\u003c/p\u003e\n\u003cp\u003e##示例2 pm2.5\n问题：寻找可用的api，获取城市的pm2.5及空气质量数据\u003c/p\u003e\n\u003cp\u003e知识点：用requests写rest客户端\u003c/p\u003e\n\u003cp\u003e子问题1：寻找可用的api\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e通过google，找到这个\u003ca href=\"http://www.pm25.in/api_doc\"\u003e有态度的网站\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e子问题2： 使用api\u003c/p\u003e\n\u003cp\u003e子问题3：结果缓存与定时获取\u003c/p\u003e\n\u003cp\u003e代码如下\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#encoding=utf-8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003eu\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#39;\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003epm25.py\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003eUsage:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\tpm25.py  \u0026lt;cityname\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003eOptions:\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\t\u0026lt;cityname\u0026gt;  城市名\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003efrom\u003c/span\u003e docopt \u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e docopt\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ewget_pm25\u003c/span\u003e(city):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\ttoken\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;5j1znBVAsnSf5xQyNQyq\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e requests \u003cspan style=\"color:#66d9ef\"\u003eas\u003c/span\u003e r\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tresult\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003er\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eget(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http://www.pm25.in/api/querys/pm2_5.json\u0026#34;\u003c/span\u003e,params\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;city\u0026#34;\u003c/span\u003e:city,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;token\u0026#34;\u003c/span\u003e:token,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t})\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e result\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ejson()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eneeds_refresh\u003c/span\u003e(filename,timeout\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e3600\u003c/span\u003e):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e os\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003etime\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tmtime\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eos\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003epath\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003egetmtime(filename)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tnow\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003etime\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003etime()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e now\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003emtime\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003etimeout\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edef\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eget_pm25\u003c/span\u003e(city):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tfilename\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;pm25.data.\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e{}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e.json\u0026#39;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eformat(city)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e os\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003ejson\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tdata\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eNone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e os\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003epath\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eisfile(filename) \u003cspan style=\"color:#f92672\"\u003eand\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003enot\u003c/span\u003e needs_refresh(filename):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tdata\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003efile(filename,\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;r\u0026#39;\u003c/span\u003e)\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eread()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tdata\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ejson\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eloads(data)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\tdata\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ewget_pm25(city)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e type(data)\u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003etype({}):\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\tprint data[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;error\u0026#39;\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\tfile(filename,\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;w\u0026#39;\u003c/span\u003e)\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ewrite(json\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003edumps(data,indent\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e))\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e data[\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e][\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;pm2_5\u0026#34;\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e __name__ \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;__main__\u0026#39;\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\targs\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003edocopt(__doc__)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tcities\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eargs[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026lt;cityname\u0026gt;\u0026#39;\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\tprint get_pm25(args[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026lt;cityname\u0026gt;\u0026#39;\u003c/span\u003e])\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e##示例3 使用flask-rest搭建rest服务\n\u003ca href=\"http://flask-restful.readthedocs.org/en/latest/\"\u003eflask-rest\u003c/a\u003e\n是一个使用flash框架搭建rest服务的工具，使用方法如下：\u003c/p\u003e","title":"Python web api"},{"content":"最近在公司做了一些python的技术分享，都是比较基础的东西，用到的一些题材还挺有意思的，和大家分享。\n###python 初探 ###[Python web api]({% post_url 2014-03-26-python-2 %}) ###[用Python做文本摘要]({% post_url 2014-03-26-python-3 %})\n本文是系列的第一篇。\n##起源 ###作者 Guido Van Rossum (GvR)\n“仁慈的终身独裁者”\n###得名\n“1989年12月，我在寻找一门“课余”编程项目来打发圣诞节前后的时间。我的办公室会关门，但我有一台家用电脑，而且没有太多其它东西。我决定为当时我正构思的一个新的脚本语言写一个解释器，它是 ABC 语言的后代，对 UNIX / C 程序员会有吸引力。作为一个略微有些无关想法的人，和一个蒙提·派森（Monty Python）的飞行马戏团的狂热爱好者，我选择了 Python 作为项目的标题。”\n###每个人都会 1999年，Guido向DARPA阐述Python语言的特性：\n简单、直观、强大 开源，以便任何人都可以为它做贡献 代码像纯英语那样容易理解 适用于短期开发的日常任务 这些想法中的一些已经成为现实。Python 已经成为一门流行的 编程语言，尤其是在互联网环境下。\n##特性 ###交互式命令行(Interactive console) Python可以单步直译运行。运行Python解释器进入交互式。\n命令行的环境，你可以在提示符号\u0026raquo;\u0026gt;旁输入代码，按Enter键输出结果：\n\u0026gt;\u0026gt;\u0026gt;print(\u0026#34;Hello, Python!\u0026#34;) Hello, Python! 有点像Shell 脚本的执行方式。\n不只是脚本 “脚本语言”如Linux shell script、windows batch file等，只能处理简单的任务。\n而Python是面向对象编程（OOP)的，支持异常处理和类型检查。Python的支持者较喜欢称它为一种高阶动态编程语言\n###强大易用的标准库 核心库不超过10Mb\nHtml、Xml解析：BeautifulSoup, Expat\n字符串处理：字典、数组切片、正则表达式 re\n单元测试： PyUnit\n代码版本控制： PySVN\n网络访问： urllib2\n图形模块： Tkinter、PyTCL、WxPython\n串行化、多线程等\n扩展标准库十分容易 ###胶水语言(glue language) Python经常用作将不同语言编写的程序“粘”在一起的胶水语言。 Google内部的很多项目使用C++编写性能要求极高的部分，然后用Python调用相应的模块。\nC/C++:\nBoost.Python使得 Python 和 C++ 的类库能互相调用（.pyc）\nJava:\nJython 是用Java实现的Python，可同时使用二者的类库\n.NET:\nIronPython是Python在.NET平台上的版本。\n###收放自如(scalability) Python内建的数据结构（variable, list 和 dict）以及对多线程 分布式操作的支持，使得程序可以用相同的代码处理不同规模 的数据，以及并发的用户需求。\n###不要括号 Python使用缩进而不是括号来进行代码段标识，减少了视觉上 的混乱，并且使程序变短，从而提高了程序的可读性。\n###发行版本\nCPython: www.python.org\n主流：2.5-2.7\n最新：3.0 不向下兼容\nActivePython:\nWindows 下的Python，文档和库较全\nIronPython： http://ironpython.codeplex.com/\n与.NET集成较好\n可使用CPython的类库\nNumPy，Python(x,y)：\n对科学计算进行了优化的Python版本\n###vs. Perl Perl是另一种广泛使用(滥用)的动态高级语言, 经常被用来与Python 比较。\n正则表达式的典范 催生了CGI、PHP 黑客最喜爱的语言 作者：\nLarry Wall\nPerl语言之父，语言学家；两届国际C语言混乱代码大赛（IOCCC） 的冠军；第一届自由软件奖得主。\n程序员的三大美德：\n懒惰：能让人尽量减少总能量支出的美德。它使你写出节省脑力、可以重用的代码；也督促你为程序写注释和文档，那样你就不用回答各种问题。 不耐烦：你会对试图偷懒的计算机代码大发雷霆。 你写出的代码能预测并适应、而非被动满足用户的需求，或者至少看上去是这样。 傲慢：自傲到人神共愤的程度，让你编写（维护）的程序拥有无可挑剔的品质。 ###vs. Ruby\nRuby：比Python更年轻的动态语言\n完全面向对象 支持正则表达式 整合了多种语言的优势 作者：松本行弘 @yukihiro_matz\nRuby on Rails （RoR） 网站快速开发工具\n###观点 Perl之父Larry Wall:\n“做一件事有很多种方法” TIMTOWTDI\nPython之父Guido Van Rossum ：\n“做一件事，应该有一种最直观的方法，而且最好只有一种。”\nRuby之父松本行弘 (“Matz”)\n“不要重复自己” DRY原则\n###国籍？\n语言 作者 国籍 风格 Perl Larry Wall 美国 随性自由 Python Guido van Rossum 荷兰 优雅统一 Ruby 松本行弘 (“Matz”) 日本 兼容并包 ##用途\n脚本程序 大型程序的原型开发 科学计算 网络应用 计算机图形编程 ###知名的Python应用\nZope：www.zope.com\n一个应用程序服务器，具有内容管理、团队开发、XML、面向对象、SOAP接口等一系先进特性，开源。\nGadfly：http://www.chordate.com/gadfly.html\n一个用Python写的面向对象关系型数据库，具有小巧、快速、可移植性好的 特点，具有大部分SQL语言特性。开源。\nWallbase: http://wallbase.net\nPython编写的图片站点。\nuTorrent : http://www.utorrent.com\nBitTorrent下载软件，主程序仅2Mb，支持ipv6地址解析。开源。\nTorchlight: torchlight.perfectworld.com\nPython编写的大型3D游戏，原Blizzard公司人员制作发行，开源。\n###Google Apps Engine Google App Engine，GAE\n“Google App Engine 可让您在 Google 的基础架构上运行您的网络 应用程序。App Engine 应用程序易于构建和维护，并可根据您的访 问量和数据存储需要的增长轻松扩展。使用 Google App Engine， 将不再需要维护服务器：您只需上传您的应用程序，它便可立即为您的用户提供服务。”\nPython 为GAE的数据存储区、Google 帐户、网址抓取和电子邮件服务提供了丰富的 Python API。GAE还提供了一个称为 webapp 的简单 Python 网络应用程序框架，从而可以轻松开始构建应用程序。 ###GAE的主要服务\n动态网络服务，提供对常用网络技术的完全支持 持久存储空间，支持查询、分类和事务 自动扩展和负载平衡 用户身份验证和使用 Google 帐户发送电子邮件的 API 一套在本地模拟 GAE的开发环境 用于在指定时间和定期触发事件的计划任务 ##硬币的另一面 限制Python发展的因素有：\n数据库访问层的局限性 相比现有的成熟技术，比如ODBC和JDBC，Python的数据库访问层看起来就过于原始了。虽然这一方面也在发生变化，但是，开发部门需要平滑地接合现有的复杂遗留数据，同时需要快速的SQL数据库访问，所有这一些使其在短时期内难以对Python表现出什么太大的兴趣。\n文档差距 相比其对手语言，比如Perl、Java，在某种程度上再算上PHP，Python确实深受文档缺乏之苦，Python没有广泛、易于获得的文档和图书。市面上冠以PHP标题的图书数量几乎是Python的两倍多；而Perl就更多了，有400多种。\nPython的在线文档倒还组织得比较好，但是这些文档几乎全是些参考资料。幸而Python相当容易的学习曲线减轻了对图书资料的过多需要。\n缺乏GUI和团队协作工具 给Python应用程序创建图形用户界面未必复杂。Python分发版本随带的Tk就是Python开发人员最常用的工具。但是Tk缺乏可访问、易用的GUI工具。\u000b相比GUI工具的缺乏更要命的是Python几乎没有支持团队开发的协议工具。 Java在这些工具领域可谓相当丰富。在企业软件开发市场上，这一缺陷简直可视为致命的要害。没有这类工具要让很多程序员共同开发同一项目几乎是不可能的。Python利用其模块化和命名空间分析等特性减轻了这一方面的需求，这些特性可以让多个程序员开发项目时不可能发生代码冲突的情况。但是，这同样改变不了其协同性能缺乏的严重性。\n##如何学习\n“Don\u0026rsquo;t learn. Just use it.”\n##工具 SublimeText\nIDLE：CPython自带\nPythonWin：ActivePython自带\nNotepad++：查找/替换 tab和空格 语法高亮\nUlipad: 转到函数定义 Code Snippets\nEclipse：Java\nKomodo Editor/IDE\nVim/Emacs: Linux下流行的IDE\n##资料 集体智慧编程\n简明Python教程\nPython Cookbook\nIronPython In Action\nOr just Google it.\n##代码与注释\n请大家改变传统的编程态度，“向计算机发出指令”不再是我们的主要工作任务，我们应该把精力集中在“如何向其他的人类解释，我们想让计算机做什么”这件事上。\n码农应该像散文家一样，掌握化繁为简的阐述技巧，保持漂亮一致的风格。他（她）应该字典在手，仔细斟酌变量的名字，并解释其含义。他（她）会以一种由浅入深的次序介绍各种概念，交叉地使用形式化和非形式化的手段，互为解释和补充，不遗余力地让程序更加被人类所理解。\n—— 高德纳 (Donald Knuth, Literal Programming)\n###为什么？\n易开发：对自己好一点 （6个月法则） 易维护：对同事好一点 （spm） 易使用：对开发者社区好一点 （ nih ） ##编程示例1：唇形科\nScarborough Fair是1968年奥斯卡获奖影片《毕业生》的主题曲, 歌词里反复吟唱提到的植物，Parsley欧洲香芹，sage鼠尾草，rosemary迷迭香，thyme百里香，这里的四种植物，就有三种出自香草植物辈出的帝国：唇形科。\n“唇形科”这个名词对于普通人也许会略感陌生，但接下来开始列举的这些名字，你一定很早以前就曾听过，或者品尝过：薄荷、留兰、黄芩、紫苏、香薷、藿香、薰衣草、牛至、香蜂草、迷迭香、百里香、罗勒、香青兰、鼠尾草、丹参、风轮菜、益母草、夏枯草……是的，这些弥漫着梦幻小清新香味和草药味道的植物，它们都来自于唇形科。\n###问题描述 唇形科的部分香料所属的分类树如下：\n唇形科 Lamiaceae 迷迭香属 Rosmarinus 迷迭香 Rosmarinus officinalis 紫苏属 Perilla 紫苏 Perilla frutescens 薰衣草属 Lavandula 狭叶薰衣草 Lavandula angustifolia 西班牙薰衣草 Lavandula stoechas 宽叶薰衣草 Lavandula latifolia 薄荷属 Mentha 薄荷 Mentha haplocalyx 胡椒薄荷 Mentha piperita 刺蕊草属 Pogostemon 广藿香 Pogostemon cablin\t现有一个扁平化的记录文件\na _ 唇形科 Lamiaceae b a 迷迭香属 Rosmarinus c b 迷迭香 Rosmarinus officinalis d a 紫苏属 Perilla e d 紫苏 Perilla frutescens f a 薰衣草属 Lavandula g f 狭叶薰衣草 Lavandula angustifolia h f 宽叶薰衣草 Lavandula latifolia i f 西班牙薰衣草 Lavandula stoechas j a 薄荷属 Mentha k j 薄荷 Mentha haplocalyx l j 胡椒薄荷 Mentha piperita m a 刺蕊草属 Pogostemon n m 广藿香 Pogostemon cablin 每一行是一个植物学上的分类实体（科、属、种）\n每行按空格分隔，第一个域是实体id，第二个是父级实体的id（_表示没有父），第三个是中文名，剩下的是拉丁文名。\n请根据扁平化的文件中的实体id和父级id，重建并显示分类树。\n###问题分析\n其实是从行列储存的数据文件中构造树的问题。\n涉及到的python知识点：\n文件读写 类的写法 基本数据结构（list、dict、sequence） 树的构建与遍历 迭代器的写法（yield关键字） 字符串的格式化（print） ###文件读写\n#输入文件的名称\tinput_file_name=\u0026#39;spices.txt\u0026#39;\t#写文件，w\t#如果是在文件后附加（例如log）则为a\tfile(input_file_name,\u0026#34;w\u0026#34;).write(flat)\t#读文件, r flat=file(input_file_name,\u0026#39;r\u0026#39;).read() ###类的写法\nclass Plant(object): #类的说明，在help(Plant)时显示 \u0026#34;\u0026#34;\u0026#34;docstring for Plant\u0026#34;\u0026#34;\u0026#34; #构造函数 def __init__(self,plant_id,parent_id,chinese_name,latin_name): super(Plant, self).__init__() self.plant_id=plant_id #实体id self.chinese_name=chinese_name #中文名 self.latin_name=latin_name #拉丁名 self.parent=None #父实体 self.parent_id=parent_id #父id self.children=[] #孩子实体列表 self.depth=0 #实体的深度（级别），根节点为0，每一级+1 #类方法，所有类方法的第一个参数都是self，表示类的实例本身 self.foo是实例的foo #显示实体信息，返回字符串 def display(self) return str(self.plant_id) ###基本数据结构：list、dict、sequence http://sebug.net/paper/python/ch09s02.html\nhttp://sebug.net/paper/python/ch09s04.html\nhttp://sebug.net/paper/python/ch09s05.html ###树的构建与遍历 见代码 ###迭代器的写法（yield）\ndef walk_tree(current,root=None): yield current for child in current.children: for x in walk_tree(child,current): yield x 简单地讲，yield 的作用就是把一个函数变成一个迭代器，在 for 循环执行时，每次循环都会执行 walk_tree 函数内部的代码，执行到 yield 时，就返回一个迭代值，下次迭代时，代码从 yield 的下一条语句继续执行，而函数的内部变量看起来和上次中断执行前是完全一样的，于是函数继续执行，直到再次遇到 yield。 ###字符串的格式化 看这里 ###完整代码\n#encoding=utf-8 \u0026#34;\u0026#34;\u0026#34; 从平面化的文件中恢复对象树的结构，并打印出来，保存 \u0026#34;\u0026#34;\u0026#34; flat=\u0026#34;\u0026#34;\u0026#34; a _ 唇形科 Lamiaceae b a 迷迭香属 Rosmarinus c b 迷迭香 Rosmarinus officinalis d a 紫苏属 Perilla e d 紫苏 Perilla frutescens f a 薰衣草属 Lavandula g f 狭叶薰衣草 Lavandula angustifolia h f 宽叶薰衣草 Lavandula latifolia i f 西班牙薰衣草 Lavandula stoechas j a 薄荷属 Mentha k j 薄荷 Mentha haplocalyx l j 胡椒薄荷 Mentha piperita m a 刺蕊草属 Pogostemon n m 广藿香 Pogostemon cablin \u0026#34;\u0026#34;\u0026#34; tree=\u0026#34;\u0026#34;\u0026#34; 唇形科 Lamiaceae 迷迭香属 Rosmarinus 迷迭香 Rosmarinus officinalis 紫苏属 Perilla 紫苏 Perilla frutescens 薰衣草属 狭叶薰衣草 Lavandula angustifolia 宽叶薰衣草 Lavandula latifolia 西班牙薰衣草（Lavandula stoechas） 薄荷属 Mentha 薄荷 Mentha haplocalyx 胡椒薄荷 Mentha piperita 刺蕊草属 Pogostemon 广藿香 Pogostemon cablin \u0026#34;\u0026#34;\u0026#34; #输入文件的名称 input_file_name=\u0026#39;spices.txt\u0026#39; #写文件，w #如果是在文件后附加（例如log）则为a file(input_file_name,\u0026#34;w\u0026#34;).write(flat) #读文件， r flat=file(input_file_name,\u0026#39;r\u0026#39;).read() class Plant(object): #类的说明，在help(Plant)时显示 \u0026#34;\u0026#34;\u0026#34;docstring for Plant\u0026#34;\u0026#34;\u0026#34; #构造函数 def __init__(self,plant_id,parent_id,chinese_name,latin_name): super(Plant, self).__init__() self.plant_id=plant_id #实体id self.parent_id=parent_id #实体id self.chinese_name=chinese_name #实体id self.latin_name=latin_name #实体id #类方法，所有类方法的第一个参数都是self，表示类的实例本身 self.foo是实例的foo #显示实体信息，返回 def display(self): return \u0026#34;{}{} {}\u0026#34;.format (\u0026#34;\\t\u0026#34;*x.depth, x.chinese_name, x.latin_name) def get_tree_from_flat_file(flat): dic={} #字典，key为plant_id, value为Plant对象 root=None #记录树的根实体 #逐行读取并生成实体，然后装入dic中 for line in flat.split(\u0026#34;\\n\u0026#34;): #line为string，split函数将sring分割成list，也就是words words=line.split(\u0026#34; \u0026#34;) #空行不做处理 if len(words)\u0026lt;=1: continue #获取各种属性 plant_id, parent_id, chinese_name = words[0], words[1], words[2] latin_name=\u0026#34; \u0026#34;.join(words[3:]) #从list的第3个元素到最后，用空格连接成string #Plant类的实例化 plant=Plant(plant_id,parent_id,chinese_name,latin_name) #dict的赋值方法 dic[plant_id]=plant #补充实体的parent_id、parent和children属性 for x in dic.values(): #dict的遍历，可根据需要遍历.keys() .values() 和 .items() if x.parent_id==\u0026#34;_\u0026#34;: root=x elif x.parent_id in dic: x.parent=dic[x.parent_id]\tif x.parent: #也可写作x.parent!=None True False x.parent.children.append(x) return root root=get_tree_from_flat_file(flat) #介绍递归函数和迭代器的写法 #walk_tree是一个递归函数，返回的是一个迭代器 #可用在for x in walk_tree中 def walk_tree(current,root=None,depth=0): current.depth=depth yield current for child in current.children: for x in walk_tree(child,current,depth+1): yield x output=[] for x in walk_tree(root): s= x.display() print s output.append(s) file(\u0026#34;tree.txt\u0026#34;,\u0026#34;w\u0026#34;).write(\u0026#34;\\n\u0026#34;.join(output)) output=[] for x in walk_tree(root): s= x.display() print s output.append(s) file(\u0026#34;tree.txt\u0026#34;,\u0026#34;w\u0026#34;).write(\u0026#34;\\n\u0026#34;.join(output)) ###思考题 输入为上面的示例1中输出的分类树文件，请生成扁平化的数据文件，也就是示例1的输入文件。plant_id可随意取，不重复即可。parent_id要等于父节点的id。\n提示1: 如何生成唯一id google “python 唯一id” 提示2: 获取一行中前缀空格数的方法: 设行字符串存在变量line中,\nlen(line)为line的长度\nline1=line.lstrip()为去掉所有的前缀空格后的line\nlen(line)-len(line1)为前缀空格数。\n也可用正则表达式s/^\\s+//。\n","permalink":"/post/2014-03-26-python-1/","summary":"\u003cp\u003e最近在公司做了一些python的技术分享，都是比较基础的东西，用到的一些题材还挺有意思的，和大家分享。\u003c/p\u003e\n\u003cp\u003e###\u003ca href=\"#start\"\u003epython 初探\u003c/a\u003e\n###[Python web api]({% post_url 2014-03-26-python-2 %})\n###[用Python做文本摘要]({% post_url 2014-03-26-python-3 %})\u003c/p\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003e\u003c!-- raw HTML omitted --\u003e本文是系列的第一篇。\u003c/p\u003e\n\u003cp\u003e##起源\n###作者\n\u003cimg loading=\"lazy\" src=\"/images/python_1/1.png\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://plus.google.com/115212051037621986145\"\u003eGuido Van Rossum (GvR)\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e“仁慈的终身独裁者”\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e###得名\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e“1989年12月，我在寻找一门“课余”编程项目来打发圣诞节前后的时间。我的办公室会关门，但我有一台家用电脑，而且没有太多其它东西。我决定为当时我正构思的一个新的脚本语言写一个解释器，它是 ABC 语言的后代，对 UNIX / C 程序员会有吸引力。作为一个略微有些无关想法的人，和一个\u003cstrong\u003e蒙提·派森（Monty Python）的飞行马戏团\u003c/strong\u003e的狂热爱好者，我选择了 Python 作为项目的标题。”\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e###每个人都会\n1999年，Guido向DARPA阐述Python语言的特性：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e简单、直观、强大\u003c/li\u003e\n\u003cli\u003e开源，以便任何人都可以为它做贡献\u003c/li\u003e\n\u003cli\u003e代码像纯英语那样容易理解\u003c/li\u003e\n\u003cli\u003e适用于短期开发的日常任务\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这些想法中的一些已经成为现实。Python 已经成为一门流行的\n编程语言，尤其是在互联网环境下。\u003c/p\u003e\n\u003cp\u003e##特性\n###交互式命令行(Interactive console)\nPython可以单步直译运行。运行Python解释器进入交互式。\u003c/p\u003e\n\u003cp\u003e命令行的环境，你可以在提示符号\u0026raquo;\u0026gt;旁输入代码，按Enter键输出结果：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u0026gt;print(\u0026#34;Hello, Python!\u0026#34;) \nHello, Python!\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e有点像Shell 脚本的执行方式。\u003c/p\u003e\n\u003ch3\u003e\u003c/h3\u003e\n\u003cp\u003e不只是脚本\n“脚本语言”如Linux shell script、windows batch file等，只能处理简单的任务。\u003c/p\u003e\n\u003cp\u003e而Python是面向对象编程（OOP)的，支持异常处理和类型检查。Python的支持者较喜欢称它为一种\u003cstrong\u003e高阶动态编程语言\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e###强大易用的标准库\n核心库不超过10Mb\u003c/p\u003e","title":"python 初探"},{"content":"本文是[系列]({% post_url 2014-03-26-python-1 %})的第三篇。\n##文本摘要 以下新闻来自雷锋网\nYahoo收购新闻摘要应用Summly\n宗仁 2013-03-26 07:53 没有评论\n标签：Summly 新闻摘要\nYahoo 昨日宣布收购新闻摘要移动公司Summly，价格可能为3000万美金，App本身允许你快速浏览和分享新闻，创始人Nick D’Aloisio17岁，曾获得Horizons Ventures, betaworks, Shakil Khan, Matt Mullenweg, Troy Carter的投资，而且跟新闻集团合作来采集内容。\nSummly采用了自然语言处理算法，可将新闻内容提炼为不足400字的短句。用户可以快速浏览新闻话题，遇到感兴趣的内容再点击进入原始链接阅读全文。Summly在苹果AppStore应用商店中的下载量已超过50万次。\n自从玛丽莎·梅耶（MarissaMayer）上任CEO后，雅虎几乎在任何事情上都恢复了步调。就在五天前，该公司收购了社交推荐公司Jybe，并获得了随同这次收购一起回到公司的前雅虎职员。\n以下是雅虎在其官方博客上发布的声明：\n今天我们很高兴地告诉大家，我们将收购Summly，一家本着简化我们获得信息的方式，使之更快、更容易、更简单的精神创立的移动产品公司。\n尼克·德洛伊西奥在15岁时就在伦敦的家中开发了Summly应用。其始于一种见解——我们生活在一个信息世界里，需要新的方式简化我们寻找对我们很重要的报道，只需看一眼。移动设备正在改变我们的日常生活和工作，用户不但改变了他们消费的信息，也改变了信息的数量。\n这篇新闻有两个值得注意的地方，第一，文本摘要很有价值；第二，技术不会很难，毕竟15岁的孩子都可以开发。\n下面我们就来看看做文本摘要的大致思路。\n##大致思路\n文本摘要 顾名思义，就是找出一部分重要的句子。 这句话有三个逻辑重点。\n###1. 找出一部分重要的句子 也就是说要把文章切成句子。比较直观的想法是根据标点符号以及空格、换行符等。断句这个问题，英文反而比中文要复杂，例如句号.和单引号'都是有多个意思的，都不一定能标明一句话的结尾。 ###2. 找出一部分重要的句子 如何衡量一篇文章里的每句话是否重要？怎样量化这个重要性？有以下思考的角度。\n根据位置（标题、导语、段首段尾） 一般来说，文章尤其是新闻的标题、节标题、导语和段首段尾比较重要。对于html解析而言，就是title、h1、h2、a、strong等标记中的文字更重要。\n根据内容 内容方面，需要把粒度细分到词的重要程度，如果一句话中的词很重要，那么这句话很重要。\n那么就有下面的两个问题：\n怎么获得一句话中的词？也就是分词问题。\n词的重要程度如何衡量？\n下面分别来介绍这两个问题。\n###2.1 分词 就是在词与词之间插入标记，一般是空格。英文文本不需要这一步，本来就有空格。但中文没有，而且一词多义现象很多， 语法结构还会随着词的位置而变化，因此中文分词是一个比较独特的问题。\n但是中文分词和语音识别很像，因为语音信号在词与词之间也是没有空格的，因此可共用技术（HMM，CRF）。\nPython比较好的中文分词工具有：\n结巴分词\ngenius分词\n###2.2 词的重要程度如何衡量？ ####词频（TF） 需要去掉词频太高的词（停用词） ####固定搭配的频率 N-Gram ####词性 名词、动词一般比副词、形容词重要 ####专业词典+文章分类信息 有了专业词典以及文章分类的数据，就可以用更高级的统计工具，甚至是信息论的知识，利用词在不同类别和领域中的分布差异以及权重， 计算词对文章的互信息。这方面简单的方法有TF-IDF，相对复杂的方法有LDA（主题词的提取）。\n###3. 找出一部分重要的句子 需要根据重要性对句子进行一个排序，选出排名靠前的，加入最后的摘要。最后，最好能恢复句子原有的顺序，以便人们阅读和理解。\n到底要几句？摘要的长度应该是可以参数化的，策略可以采取最少一句，最多N句，N是参数，也可以用百分比来定义，即文章总句数的x%，x为参数。\n##示例4 一个简单的文本摘要的python实现\n#encoding=utf-8 from collections import defaultdict frequencies=defaultdict(int) stop_words=set() DISPLAY_FULLTEXT=False SUMMARY_RATIO= 0.1 def init_stopwords(): global stop_words stop_words= set(u\u0026#34;where the of is and to in that we for an are by be as on with can if from which you it this then at have all not one has or that\u0026#34;.split()) file_stopwords=\u0026#34;stop_words.txt\u0026#34; import os if os.path.isfile(file_stopwords): lines=file(file_stopwords,\u0026#39;r\u0026#39;).read().split(\u0026#34;\\n\u0026#34;) stop_words=stop_words | set(lines) def split_to_sentences(text): \u0026#39;\u0026#39;\u0026#39;Very simple spliting to sentences by [.!?] and paragraphs. In real life we\u0026#39;ll be much more fancy. \u0026#39;\u0026#39;\u0026#39; import nltk.data tokenizer = nltk.data.load(\u0026#39;tokenizers/punkt/english.pickle\u0026#39;) text =\u0026#34;\\n\\n\u0026#34;.join(tokenizer.tokenize(text)) import re sentences=[] start = 0 for match in re.finditer(u\u0026#39;(\\s*[。？！]\\s*)|(\\n{2,})\u0026#39;, text): sentences.append(text[start:match.end()].strip()) start = match.end() sentences=filter(lambda x:len(x)\u0026gt;2,sentences) return sentences def tokenize(text): \u0026#39;\u0026#39;\u0026#39;tokenize using jieba \u0026#39;\u0026#39;\u0026#39; import jieba return jieba.cut(text) def token_frequency(text): \u0026#39;\u0026#39;\u0026#39;Return frequency (count) for each token in the text\u0026#39;\u0026#39;\u0026#39; res = defaultdict(int) for token in tokenize(text): res[token] += 1 return res def sentence_score(sentences): \u0026#39;\u0026#39;\u0026#39;get sentence score using word frequencey\u0026#39;\u0026#39;\u0026#39; global frequencies,stop_words if not len(stop_words): init_stopwords() scores=[] import math num_sentences=len(sentences) len_sentences=map(len,sentences) max_len_sentences=max(len_sentences) min_len_sentences=min(len_sentences) for i,sentence in enumerate(sentences): tokens=tokenize(sentence) #词频的和，去掉停用词 score= sum((frequencies[token] for token in tokens if token not in stop_words)) #削弱句子长度的影响 length_factor=1-1.0*(len_sentences[i]-min_len_sentences)/max_len_sentences score*=length_factor #增加句子位置的影响(越靠前越好) position_factor=1-0.3*i/num_sentences score*=position_factor scores.append(score) return scores def create_summary(sentences): global frequencies summary = [] import math len_sentence=int(math.ceil(len(sentences)*SUMMARY_RATIO)) len_sentence=max(len_sentence,1) len_sentence=min(len_sentence,10) score=sentence_score(sentences) score=[(i,s) for i,s in enumerate(score)] #根据得分排序 score.sort(key=lambda s:s[1],reverse=1) #取出得分靠前的句子 score=score[:len_sentence] #恢复原来句子的顺序 score.sort(key=lambda s:s[0]) summary=[sentences[x[0]] for x in score] return set([x[0] for x in score]) # return \u0026#39;\\n\u0026#39;.join(summary) def decode_text(text): for x in [\u0026#39;utf-8\u0026#39;,\u0026#39;gbk\u0026#39;]: try: return text.decode(x) except Exception, e: pass raise Exception(\u0026#39;cannot decode using all codings\u0026#39;) def summarize(text): global frequencies text=decode_text(text) frequencies = token_frequency(text) sentences = split_to_sentences(text) if not len(sentences): return ([],set()) index = create_summary(sentences) return (sentences,index) if __name__ == \u0026#39;__main__\u0026#39;: from colorize import Color clr = Color() s=file(\u0026#39;test.txt\u0026#39;,\u0026#39;r\u0026#39;).read() sentences,index=summarize(s) for i,sentence in enumerate(sentences): s=sentence.encode(\u0026#39;gbk\u0026#39;) if i in index: print s # clr.print_red_text(s) elif DISPLAY_FULLTEXT: print s print sorted(list(index)) ##思考题3 请从句子的位置和内容两方面入手，思考如何改进上面简单文本摘要程序的表现。\n","permalink":"/post/2014-03-26-python-3/","summary":"\u003cp\u003e本文是[系列]({% post_url 2014-03-26-python-1 %})的第三篇。\u003c/p\u003e\n\u003cp\u003e##文本摘要\n以下新闻来自\u003ca href=\"http://www.leiphone.com/yahoo-summly.html\"\u003e雷锋网\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eYahoo收购新闻摘要应用Summly\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e宗仁 2013-03-26 07:53 没有评论\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e标签：Summly 新闻摘要\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eYahoo 昨日宣布收购新闻摘要移动公司Summly，\u003cstrong\u003e价格可能为3000万美金\u003c/strong\u003e，App本身允许你快速浏览和分享新闻，创始人Nick D’Aloisio17岁，曾获得Horizons Ventures, betaworks, Shakil Khan, Matt Mullenweg, Troy Carter的投资，而且跟新闻集团合作来采集内容。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSummly采用了自然语言处理算法，可将新闻内容提炼为不足400字的短句。用户可以快速浏览新闻话题，遇到感兴趣的内容再点击进入原始链接阅读全文。Summly在苹果AppStore应用商店中的下载量已超过50万次。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e自从玛丽莎·梅耶（MarissaMayer）上任CEO后，雅虎几乎在任何事情上都恢复了步调。就在五天前，该公司收购了社交推荐公司Jybe，并获得了随同这次收购一起回到公司的前雅虎职员。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e以下是雅虎在其官方博客上发布的声明：\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e今天我们很高兴地告诉大家，我们将收购Summly，一家本着简化我们获得信息的方式，使之更快、更容易、更简单的精神创立的移动产品公司。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e尼克·德洛伊西奥在15岁时就在伦敦的家中开发了Summly应用\u003c/strong\u003e。其始于一种见解——我们生活在一个信息世界里，需要新的方式简化我们寻找对我们很重要的报道，只需看一眼。移动设备正在改变我们的日常生活和工作，用户不但改变了他们消费的信息，也改变了信息的数量。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e这篇新闻有两个值得注意的地方，第一，文本摘要很有价值；第二，技术不会很难，毕竟15岁的孩子都可以开发。\u003c/p\u003e\n\u003cp\u003e下面我们就来看看做文本摘要的大致思路。\u003c/p\u003e\n\u003cp\u003e##大致思路\u003c/p\u003e\n\u003cp\u003e文本摘要 顾名思义，就是\u003cstrong\u003e找出一部分重要的句子\u003c/strong\u003e。 这句话有三个逻辑重点。\u003c/p\u003e\n\u003cp\u003e###1. 找出一部分重要的\u003c!-- raw HTML omitted --\u003e句子\u003c!-- raw HTML omitted --\u003e\n也就是说要把文章切成句子。比较直观的想法是根据标点符号以及空格、换行符等。断句这个问题，英文反而比中文要复杂，例如句号\u003ccode\u003e.\u003c/code\u003e和单引号\u003ccode\u003e'\u003c/code\u003e都是有多个意思的，都不一定能标明一句话的结尾。\n###2. 找出一部分\u003c!-- raw HTML omitted --\u003e重要\u003c!-- raw HTML omitted --\u003e的句子\n如何衡量一篇文章里的每句话是否重要？怎样量化这个重要性？有以下思考的角度。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e根据位置（标题、导语、段首段尾）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e一般来说，文章尤其是新闻的标题、节标题、导语和段首段尾比较重要。对于html解析而言，就是title、h1、h2、a、strong等标记中的文字更重要。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e根据内容\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e内容方面，需要把粒度细分到词的重要程度，如果一句话中的词很重要，那么这句话很重要。\u003c/p\u003e","title":"用Python做文本摘要"},{"content":"###1.首先建立从改动到输出的管道\n必须保证你改的代码，可以很方便地看到结果（或影响）。可见是可控的必要条件。\n###2.尽可能缩短反应链\n尽可能缩短输入改动到输出改动的时间，最好是所见即所得（WYSIWYG）。曾经做过一个项目，在做出某些修改后，需要先编译半分钟，然后把编译后的文件上传到服务器上，再重启服务器，才能看到结果的改动，特别崩溃。这就好像大型食草恐龙的神经系统一样，切下它的尾巴，大概半分钟后神经信号才会传到大脑。 动态语言（python、javascirpt、ruby等）在这方面有天生的优势，而静态语言（c++、java）则可以通过IDE的自动编译和自动化脚本来缩短反应链。如果IDE不可用，编写自动编译脚本和测试工具绝对事半功倍。如果反应链无法缩减，那么做出任何改动之前都必须深思熟虑，还得有那么一点运气，再加上代码是你自己写的，才能一针见效。\n###3.理性思考的能力对于调试是很重要的，包括：\n做出假设（问题出在哪里），然后以最小的代价（以时间或代码量来衡量）来验证这个假设。 单变量控制。一次改动太多的地方，就无法判断结果的变化是哪处改动造成的。 分离有问题的部分，做手术的创口尽可能小。这和上面提到的缩短反应链是一脉相承的。 极端情况下，也可以合理使用暴力手段。比如使用log或其他手段，只能定位到bug出在file1的第10行到第30行中间（假设顺序执行），那么可以用折半查找法，在第20行输出调试信息\u0026hellip;\n###4.善于总结\n问题的出现往往是重构的机会，一个bug往往能牵出更多的bug。如果同类的问题频繁出现，有可能标志着编写者思考方式上的漏洞。 class的职责是否不够清晰和专一？ 是否缺乏合理的错误记录和处理机制？文档结构和变量命名是否规范、无歧义？ 擅长总结，有助于编写者认识和弥补这些思维和编程实践上的不足，从而提升职业素养。\n###5.源代码管理是你最好的朋友\n问题往往是日积月累才出现的，而且往往无独有偶。在着手解决bug之前，先看看有没有类似的bug被提交或解决过。除了查看代码本身的注释，也要查看出错文件的提交历史。当然，前提是大家在提交代码的时候能提供有用的注释。\n###6.持续重构，持续思考\n排计划时要为重构预留出时间，定期做代码质量的改善，比如每周抽出1天时间来重构、写注释和说明文档。这有助于减少技术债务，提升编程能力。\n","permalink":"/post/2013-12-05-debug-tips/","summary":"\u003cp\u003e###1.首先建立从改动到输出的管道\u003c/p\u003e\n\u003cp\u003e必须保证你改的代码，可以很方便地看到结果（或影响）。可见是可控的必要条件。\u003c/p\u003e\n\u003cp\u003e###2.尽可能缩短反应链\u003c/p\u003e\n\u003cp\u003e尽可能缩短输入改动到输出改动的时间，最好是所见即所得（WYSIWYG）。曾经做过一个项目，在做出某些修改后，需要先编译半分钟，然后把编译后的文件上传到服务器上，再重启服务器，才能看到结果的改动，特别崩溃。这就好像大型食草恐龙的神经系统一样，切下它的尾巴，大概半分钟后神经信号才会传到大脑。 动态语言（python、javascirpt、ruby等）在这方面有天生的优势，而静态语言（c++、java）则可以通过IDE的自动编译和自动化脚本来缩短反应链。如果IDE不可用，编写自动编译脚本和测试工具绝对事半功倍。如果反应链无法缩减，那么做出任何改动之前都必须深思熟虑，还得有那么一点运气，再加上代码是你自己写的，才能一针见效。\u003c/p\u003e\n\u003cp\u003e###3.理性思考的能力对于调试是很重要的，包括：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e做出假设（问题出在哪里），然后以最小的代价（以时间或代码量来衡量）来验证这个假设。\u003c/li\u003e\n\u003cli\u003e单变量控制。一次改动太多的地方，就无法判断结果的变化是哪处改动造成的。\u003c/li\u003e\n\u003cli\u003e分离有问题的部分，做手术的创口尽可能小。这和上面提到的缩短反应链是一脉相承的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e极端情况下，也可以合理使用暴力手段。比如使用log或其他手段，只能定位到bug出在file1的第10行到第30行中间（假设顺序执行），那么可以用折半查找法，在第20行输出调试信息\u0026hellip;\u003c/p\u003e\n\u003cp\u003e###4.善于总结\u003c/p\u003e\n\u003cp\u003e问题的出现往往是重构的机会，一个bug往往能牵出更多的bug。如果同类的问题频繁出现，有可能标志着编写者思考方式上的漏洞。 class的职责是否不够清晰和专一？ 是否缺乏合理的错误记录和处理机制？文档结构和变量命名是否规范、无歧义？ 擅长总结，有助于编写者认识和弥补这些思维和编程实践上的不足，从而提升职业素养。\u003c/p\u003e\n\u003cp\u003e###5.源代码管理是你最好的朋友\u003c/p\u003e\n\u003cp\u003e问题往往是日积月累才出现的，而且往往无独有偶。在着手解决bug之前，先看看有没有类似的bug被提交或解决过。除了查看代码本身的注释，也要查看出错文件的提交历史。当然，前提是大家在提交代码的时候能提供有用的注释。\u003c/p\u003e\n\u003cp\u003e###6.持续重构，持续思考\u003c/p\u003e\n\u003cp\u003e排计划时要为重构预留出时间，定期做代码质量的改善，比如每周抽出1天时间来重构、写注释和说明文档。这有助于减少技术债务，提升编程能力。\u003c/p\u003e","title":"程序调试心得"},{"content":"###1.学会使用关键词来描述问题\n虽然搜索引擎的自然语言理解能力在进步，但现在还不能无障碍地和人类交流。要向搜索引擎请教问题，必须要用它的语言——关键词。 关键词之间必须要加上空格， 以免不好的分词系统造成对你要求的误解。\n有的时候用关键词描述问题能更好地帮你看清问题的本质，即：要描述或定义我的问题，哪些词是不可能绕过去的？哪些词能帮我迅速缩小搜索的范围？\n###2.客观地描述问题本身，而不是预想的解决方案 看过一个很有意思的评论：\n用户的需求不是买电脑，而是玩魔兽。 用户常常会把自己的解决方案当成需求提给你。\n问路的时候，请不要说“附近哪有487路公交车站”，而是直接询问如何到达最终的目的地。当地人可能会给出更直接、更快捷的交通路线。\n###3.尽量少做假设\n当你在论坛问“为什么我一用你们的软件就死机”的时候，其实你假设了 a) 别人知道你的软硬件配置 b) 别人知道你近期做了哪些操作，或者说，你认为 c) 以上这些信息对于解决问题没有意义。\n一方面要提供有助于定位和解决问题的信息，另一方面要尽量使用大家都知道的词语或常识等。不要假设能解决你的问题的人和你有同样的认知水平。\n很多时候假设是潜在的，所谓“当局者迷”。这时候，对结果的分析就很重要，有助于你认识到自己做了哪些假设，哪些假设是符合意图的，哪些是不合理的。\n###4.根据搜索结果中修正你的关键词。\n搜索结果和你预期的不一样，一般有两类原因：1.你提问的方式不对，导致搜索引擎（以及搜到的回答）是基于一种错误的解读。 2.你提问的方式正确，但是问题本身，不是你想的那样，你需要重新审视你的问题。 对于第一类，你可能需要修改你的关键词，它是不是太宽泛，还是太狭隘，还是有歧义？等等。 对于第二类，你需要重新定位和描述你的问题，了解它所处的领域和背景。\n简单地说，要么换个问法，要么换个问题。\n###5.寻找和关键词同义的核心词汇\n书上的信息与网上搜索得到的信息有一个很大的不同：一本书上的信息是用一种相对统一的语言风格来传达的，你能大致预期作者会怎样去描述一个东西。但是互联网上搜索得到的信息缺乏这种统一性，很可能语言风格差别很大的两篇文章，说的是同一个事。我经常会发现，对于一个概念，我使用词语A，而大多数人都使用词语B，即B是约定俗成的“术语”，这时就要用B来代替A作为我的搜索关键词。要做到辨别这一点，必须总结一些特定领域的核心词汇，也就是上文提到的不可能绕过去的那些词。\n###6.信息的来源和信息的内容同等重要，甚至来源比内容更重要\n在搜索决策上，去哪搜\u0026gt;搜什么\u0026gt;怎么搜。\n举个例子，形如“如何用A在B中实现C功能”这样的编程问题，直接在google中输入英文关键词，然后site:stackoverflow.com，一般都能命中。\n再如，位置相关的搜索，如北京周边的美食、酒店什么的，百度的服务一般优于google的。\n高大上或者nerdy的问题就知乎、quora，而“见对象的家长该穿什么”，贴吧、天涯什么的更靠谱。\n除了信息的来源，其他用户对信息的反馈（有多少个赞/up/star）也是衡量信息价值的重要标准。如果搜索结果可以根据反馈来排序，那就更好了，例如上面提到的知乎、quora和stackoverflow等问答社区。\n","permalink":"/post/2013-12-03-how-to-solve-problems-online/","summary":"\u003cp\u003e###1.学会使用关键词来描述问题\u003c/p\u003e\n\u003cp\u003e虽然搜索引擎的自然语言理解能力在进步，但现在还不能无障碍地和人类交流。要向搜索引擎请教问题，必须要用它的语言——关键词。 关键词之间必须要加上空格， 以免不好的分词系统造成对你要求的误解。\u003c/p\u003e\n\u003cp\u003e有的时候用关键词描述问题能更好地帮你看清问题的本质，即：要描述或定义我的问题，哪些词是\u003cstrong\u003e不可能绕过去\u003c/strong\u003e的？哪些词能帮我迅速缩小搜索的范围？\u003c/p\u003e\n\u003cp\u003e###2.客观地描述问题本身，而不是预想的解决方案\n看过一个很有意思的评论：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e用户的需求不是买电脑，而是玩魔兽。\n用户常常会把自己的解决方案当成需求提给你。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e问路的时候，请不要说“附近哪有487路公交车站”，而是直接询问如何到达最终的目的地。当地人可能会给出更直接、更快捷的交通路线。\u003c/p\u003e\n\u003cp\u003e###3.尽量少做假设\u003c/p\u003e\n\u003cp\u003e当你在论坛问“为什么我一用你们的软件就死机”的时候，其实你假设了 a) 别人知道你的软硬件配置 b) 别人知道你近期做了哪些操作，或者说，你认为 c) 以上这些信息对于解决问题没有意义。\u003c/p\u003e\n\u003cp\u003e一方面要提供有助于定位和解决问题的信息，另一方面要尽量使用大家都知道的词语或常识等。不要假设能解决你的问题的人和你有同样的认知水平。\u003c/p\u003e\n\u003cp\u003e很多时候假设是潜在的，所谓“当局者迷”。这时候，对结果的分析就很重要，有助于你认识到自己做了哪些假设，哪些假设是符合意图的，哪些是不合理的。\u003c/p\u003e\n\u003cp\u003e###4.根据搜索结果中修正你的关键词。\u003c/p\u003e\n\u003cp\u003e搜索结果和你预期的不一样，一般有两类原因：1.你提问的方式不对，导致搜索引擎（以及搜到的回答）是基于一种错误的解读。 2.你提问的方式正确，但是问题本身，不是你想的那样，你需要重新审视你的问题。 对于第一类，你可能需要修改你的关键词，它是不是太宽泛，还是太狭隘，还是有歧义？等等。\n对于第二类，你需要重新定位和描述你的问题，了解它所处的领域和背景。\u003c/p\u003e\n\u003cp\u003e简单地说，要么换个问法，要么换个问题。\u003c/p\u003e\n\u003cp\u003e###5.寻找和关键词同义的核心词汇\u003c/p\u003e\n\u003cp\u003e书上的信息与网上搜索得到的信息有一个很大的不同：一本书上的信息是用一种相对统一的语言风格来传达的，你能大致预期作者会怎样去描述一个东西。但是互联网上搜索得到的信息缺乏这种统一性，很可能语言风格差别很大的两篇文章，说的是同一个事。我经常会发现，对于一个概念，我使用词语A，而大多数人都使用词语B，即B是约定俗成的“术语”，这时就要用B来代替A作为我的搜索关键词。要做到辨别这一点，必须总结一些特定领域的核心词汇，也就是上文提到的\u003cstrong\u003e不可能绕过去\u003c/strong\u003e的那些词。\u003c/p\u003e\n\u003cp\u003e###6.信息的来源和信息的内容同等重要，甚至来源比内容更重要\u003c/p\u003e\n\u003cp\u003e在搜索决策上，去哪搜\u0026gt;搜什么\u0026gt;怎么搜。\u003c/p\u003e\n\u003cp\u003e举个例子，形如“如何用A在B中实现C功能”这样的编程问题，直接在google中输入英文关键词，然后site:stackoverflow.com，一般都能命中。\u003c/p\u003e\n\u003cp\u003e再如，位置相关的搜索，如北京周边的美食、酒店什么的，百度的服务一般优于google的。\u003c/p\u003e\n\u003cp\u003e高大上或者nerdy的问题就知乎、quora，而“见对象的家长该穿什么”，贴吧、天涯什么的更靠谱。\u003c/p\u003e\n\u003cp\u003e除了信息的来源，其他用户对信息的反馈（有多少个赞/up/star）也是衡量信息价值的重要标准。如果搜索结果可以根据反馈来排序，那就更好了，例如上面提到的知乎、quora和stackoverflow等问答社区。\u003c/p\u003e","title":"如何使用互联网解决编程问题"},{"content":" 本文是几年前写的一篇译文，讨论了电子游戏让人上瘾的5个因素，涉及到行为心理学、网游(WoW、征途)以及工作游戏化等。\n原文在此\n报纸上又有玩电子游戏致死的消息。没错，又是韩国。\n搞毛啊？我可没说电子游戏是海洛因。我完全理解这些渣们的生活有其他各种杯具。但是读者你们很可能见过WoW瘾君子，而且专家也说了电子毒品绝非夸大其词。于是问题是：游戏是故意被设计成这样，让你像得了强迫症一样地去玩它，欲罢不能么？必须的！而且采取的手段真的很可怕。\nNo. 5 把你放在“斯金纳之箱”里 如果你自己曾对某个游戏痴迷，或者认识这样的人，下面这段会让你很不舒服。作者是微软的一个游戏研究人员，行为学和脑科学博士，讲的是如何把玩家钩在游戏上，欲罢不能。引文如下：\n“每个游戏场景都是时间、行动与奖励的有机体，你可以随意操控它们之间的排列组合，让玩家按预先设定的模式来行动。”\n请注意，他的文章根本没提到“好玩”或者“愉悦”，这不是他的研究领域。他关注的是“让玩家按预先设定的模式来行动。”\n“…在这时，低龄玩家会双手举过头顶，精神十分脆弱。”\n他的理论基于B. F. 斯金纳的工作，即可以通过刺激和奖励可以控制和训练被试者的行为。斯金纳发明了“斯金纳之箱”，一个带有一些装置的箱子，里边的小动物按一个拉杆可以得到一些食物颗粒。我不是说微软这货把玩家看成斯金纳箱里的小白鼠。我的意思是他使用斯金纳箱中的老鼠来阐述他的游戏设计理论。\nNick Yee，一个游戏研究者，曾把“Everquest”（无尽的任务，一个网游）称作“虚拟斯金纳之箱”。\n问题出在哪呢？ 游戏产业今非昔比。以前他们只是把游戏用50美刀卖给我们，才不管我们会玩多长时间，只要我们能买他们的下一个游戏就好了。但是这个产业的盈利模式正在转向为基于订阅的，如网游，需要玩家持续地在线，一直玩，一直付钱\u0026mdash;-直到太阳爆炸为超新星。\n当然做出再多的地图或者故事，也不可能让你玩上千个小时不重样。所以他们必须改变游戏的机制，让玩家重复地做同样的事，一遍又一遍，欲罢不能。斯金纳之箱就是他们的方法。\n目前游戏设计界对此有颇多争执。Jonathan Blow说，斯金纳式的游戏机制是一种“探索”的过程，“不是说这些游戏不好玩，而是设计上要考虑如何让玩家觉得厌倦时还能继续玩下去，用斯金纳式的奖惩操控系统，把他们锁在重复性的劳动岗上。”\n为啥这招这么有效，即使所谓的“奖励”只是些子虚乌有的数字对象？请继续往下看。\nNo. 4 做出虚拟的食物颗粒给你吃 大多数让人上瘾的游戏元素得益于以下事实：\n你的大脑不会区别对待电子游戏中的事物，就好像它们是真的一样。因为它们确实是真的。\n人们总对此嗤之以鼻(“你花了那么多时间就为拿到一把压根不存在的破剑？”)，但这种蔑视是愚蠢的。只能通过花费时间、精力和技巧才能得到的东西，必定是有价值的，无论是它是钻石做的，还是二进制码或者牛肉筋。\n韩国的最高法院已经判定，虚拟商品法律上与真实商品等效。这些虚拟商品的背后，是一个在世界范围内有50亿美刀的产业。\n这一点也不疯狂。人们花上千美刀买颗钻石，钻石除了好看也没啥用。电子游戏的装备看上去也很拉风，还能保护你不被兽人侵害。二者是一样的，你在为一个想法付钱。\n结婚纪念日快乐，亲爱的。（意思是不买钻石，买电子游戏装备）\n有什么问题吗？ 近25年来的几乎每个游戏都有可收集的物品，这不是什么新鲜玩意，也没啥不好。但因为玩家把游戏物品看做是真实且本身具有价值的，游戏设计者就会故意让玩家去到处收集物品，这种活动和游戏通关的目标毫无关系。\n设计者绝对是故意的，迎合人们收集的自然本能，让玩家是为了收集而收集。这真的有效，不信你看那个身边有软妹子还在玩游戏收集隐藏物品的家伙。收你妹啊。\n正如微软那货的文章指出的那样，游戏开发者有意在利用斯金纳箱中的那些食物小颗粒来引诱玩家，接下来就是…\nNo. 3 让你自己去按下拉杆 想象一下箱子里的小白鼠。或者如果你不喜欢把自己想成一只老鼠，想成一只可爱的小仓鼠也可以。小仓鼠可以说话，由Chris Rock配音。\n如果你想让它尽可能快地按下拉杆，怎么做？不要每次它按下时给它食物\u0026mdash;它很快就会懈怠，知道如果它想要，肯定能得到食物。最好的办法是在它按下拉杆时，以一定几率落下食物。它很快就会发了疯一样的按那个拉杆。实验中就是如此。\n在“斯金纳的王国”他们把这叫做“浮动比率奖励”。这就是为什么WoW中许多敌人会随机“掉落”贵重物品的原因。这和老虎机让人上瘾的原因是一样的。你可不能现在走，走了下一个人就全赢了。或者下一个。下下个。\n中国网游“征途”将这种手段用到了极致。游戏中充满了各种宝箱，里面可能有一个随机的物品，要打开箱子，你需要钥匙。如何得到钥匙？用钱买，现实中的钞票。这简直就是老虎机嘛。\n这还不算。“征途”的手段连赌场都甘拜下风：每天开箱子最多的玩家都会得到一个特别的大奖。\n除了利用到人的赌博天性，成千上万的玩家都在彼此竞争，看谁能开最多的箱子。一个女人告诉我，她曾整个晚上都在开箱子\u0026mdash;-超过一千个\u0026mdash;-试图赢取每日大奖。\n她没赢。总有人更沉迷。\nSo What\u0026rsquo;s The Problem? 有什么问题吗？ 你能想象她坐在那，看着她的小人在箱子旁边，一遍又一遍地点对话框，一遍又一遍地看同样的动画效果，就这样消耗掉一小时又一小时？\n如果你不了解，你会觉得她有严重的心理疾病。一个有理性的人怎么可能表现出这种“雨人”一样的强迫症行为？\nB. F. Skinner了解。他称这种训练过程为“塑形”。小小的奖励，步步引诱，就像链条上的环节。在WoW中你想要拿到拉风的T10套装。你需要5个部件。集齐套装需要400个冰霜灰烬，这种物品从某些敌人身上一次掉两三个。然后需要把每个装备部件用神圣印记升级。然后再用英雄的神圣印记升级。要得到这些你需要重复完成同样的任务，一天又一天地坐在那里点鼠标，玩游戏。软妹子怨念中。\n到这种程度，你觉得还能把这种活动叫“游戏”？更像是出疹子时忍不住去挠。这还不是最可怕的…\nNo. 2 让你不断去按…直到永远 斯金纳箱中的小仓鼠和真实世界的人有一个重大区别：我们从别处也能得到奖赏。如果一个游戏的全部内容就是点击对话框随机出一些奖品，我们最终会厌倦，去玩别的游戏。需要有一个长线的目标让我们继续游戏。而游戏设计者对此得心应手，几乎发展成了一门科学。这些手段包括：\n容易上手 一上来先让“食物”掉的很快，然后逐渐减缓奖赏的频度。这也是为什么网游一上来得到奖赏很容易（升级很快），但是之后升级所花时间和精力成指数增长。玩家在开始游戏时会体验到快速升级的爽快，而之后不断推迟的奖励实际上反而增强了每次升级的快感。微软的那个电子游戏专家指出，玩家在角色将要升级之前的那段时间会更加疯狂地游戏。\n去掉终点线 最容易的方法是把存盘点间的距离设得很远，或者（像WoW副本那样）让玩家进行超长的任务，一旦开始就不能中途退出，否则前功尽弃。但这有时会让玩家很抓狂，所以你也可以反其道而行之，像Wii版的新超级玛丽兄弟那样，把每一关设计得很短，玩起来就像吃薯片。单个薯片看起来很小，很容易就能诱惑玩家再抓一片，再抓一片…很快一包就这么没了。\n顺便说一句，平时很少有人在网上会读超过3000字的文章。所以我把这篇文章分成了很多小的条目。如果你因为读它而忽视了身边的软妹子，那么我成功了。\n不玩你就输了: 这实在是很损的一招。为什么要奖励小仓鼠按下拉杆？为什么不在它没按的时候，给它点惩罚？\n行为学家称之为“规避”。他们每隔三十秒电击一次小动物，除非它按下拉杆。它很快就学会趴在拉杆上，一遍又一遍地去按它。直到永远。\n为什么你妈妈这么喜欢玩Farmville（人人农场原型），每天收菜？因为如果不收，庄稼作物会枯萎烂掉。在“Ultima Online”，你的宅子或城堡会渐渐腐坏，除非你经常访问他们。在“Animal Crossing”，如果你不经常登录，你的城镇会被野草覆盖，房子会被小强占领。这简直就是游戏混蛋逻辑王冠上的明珠\u0026mdash;-让玩家不断点击，如果不想失去辛苦劳动换来的胜利果实的话。\n综上所述： 以上所说的每种手段都有不足，要做出让人超级上瘾的游戏，你需要把它们组合起来运用，连同前边介绍的“随机掉落”这种赌博元素（数数WoW被点名了几次）。这些手段，让小仓鼠们上蹿下跳，从一个拉杆到另一个拉杆，再到另一个。\n问题出在哪呢？ 前边我们提出了一个问题，通过强迫症一样的点击鼠标来收集物品算不算在“游戏”？更确切的问题是，什么是游戏？\n我们人玩游戏是因为掌握一种技巧的过程能带来很大的满足感，即使这种技巧没什么意义，与我们的人生目标毫无联系。游戏能开发大脑（特别是对小孩子），还能测验人的能力，即使失败了也不会没什么严重的后果。这也是为什么大脑在我们游戏时会产生一种感觉以资鼓励，我们称之为“好玩”。\n这也是为什么我不把“吉他英雄”这样的游戏包括在讨论范围的原因。它们是会上瘾没错，但每个人都明白为什么。享受从入门到精通的过程再自然不过了。同样的，竞技性的游戏，如现代战争2，是缺乏强健体魄的人们的运动。没什么神秘的：每个人都喜欢赢。\n但是那些“猛击拉杆直到饿昏过去”的游戏元素完全是另一码事。就像其他人指出的，这些游戏是要你在已经完全掌握了一门技巧之后很久，在你完全榨干它的最后一丝新鲜感之后很久，还得继续玩下去。你再怎么努力，也没法找到一种“好玩”的定义，能把用鼠标点击宝箱图片一千次这种活动包含在内。\n这也是为什么几年前WoW推出“成就”系统时暴雪饱受诟病的原因。成就是对达成一些随机、无意义、重复的目标的奖励（比如钓到1000条鱼）。没有新的内容，没有包含操作、探索，或者掌握的元素。就是一个虚拟的跑步机。\n当然，游戏开发者（我确定还有好多评论家）都会好心指出，没人强迫玩家必须要做什么。为什么人会自愿地把自己置于实验小仓鼠的悲惨境地呢？当然会，因为他们…\nNo. 让你在斯金纳之箱中找到家的感觉 你喜欢你的工作吗？\n考虑到你们中一半的人在工作时读这篇东西，我猜答案是不喜欢。这就不得不提到让游戏成瘾\u0026mdash;-或者通常意义上的成瘾\u0026mdash;-如此难以戒除的根源。\n尽管听起来挺难以置信，但恐怖故事里“因为老玩魔兽挂掉了所有科目的卢瑟”也许只是一个不喜欢上课的倒霉孩子。暴雪公司可不是什么精神控制阴谋论的幕后黑手。游戏只是填补了一个空缺。\n为什么我们会有那个空缺？因为据全知全能先生Malcolm Gladwell所说，要想对自己的工作满意必须要有三样东西，我打赌你们大多连两样也没有：\n自治（就是说，你每天做什么在某种程度上是自己说了算的）\n复杂性（所以不是简单的无脑重复）；\n付出和回报之间的关联（就是说你努力工作就真的能见到了不起的成果）。\n有没有穿裤子是不会影响工作满意度的\n大多数人，尤其是年轻的游戏人群，都缺乏这三样东西，工作中如此，生活中的其他方面亦如此。但是那些最让人上瘾的游戏能给予我们所有这三样东西…至少是它们的幻觉。\n自治： 你选择做哪些任务，或者在农场种哪些庄稼。你甚至能选择自己的身体、种族和天赋。\n用烦人的消息更新来烦你的Facebook好友真是一项烦人的才能\n复杂性： 玩家做重复性的无脑工作是因为它做起来不会让你感觉特别无脑。\n记得前边提到的T10套装/冰霜灰烬的复杂舞步。\n付出和回报之间的关联 这很关键。你在WoW中升级时身体会迸射出耀眼的光柱。\n这可不是我们每天能得到的\u0026mdash;迅捷的、强烈可感的奖励。与其说是立即得到好处的作用，不如说是一种达成目标的强烈快感。如果我们每天在办公室能得到这种奖励，并且可以量化达成既定目标的进程，那工作得多玩命？要是你体内能迸发出光柱呢？\n妙就妙在可以将无聊的过程利用起来。正如我们刚才讨论的，WoW有一种“工作赚取玩的权利”的魔力，你需要煎熬着升级或者“刷副本”赚钱，这样才能够在之后玩更酷的东西。“刷副本”的无聊反而加强了之后成就带来的喜悦感，而且顺便帮你摆脱了逃学、怠工或者不做家务去玩游戏的负罪感。毕竟，你做了很多讨厌的工作\u0026mdash;-上周二花了12小时刷副本赚钱，简直比修剪草坪还特么累。终于可以玩一会儿了。\n问题出在哪呢？ 电子游戏设计者Erin Hoffman说的很好：“成瘾行为的危害并不在于你做了某件事，而在于由于总是做那件事而没有做你该做的事”。她是在说，宝石迷阵这样简单的flash游戏对你的吸引力，取决于你有多不想做另一个窗口中打开的工作。\n额，我刚才说到哪了？\n可怕的事实是，我们中的许多人都在乞求有一个可以爬进去的斯金纳之箱，因为现实世界的奖励系统是如此缓慢而残酷，令人失望。在这个意义上，玩游戏和其他形式的精神逃避是一样的，如体育明星粉丝团，或者烈酒。\n海洛因：不就是注射器里的WoW么。\n危险之处在于这些游戏在给予人们成就感方面太有成效了，曾经人们要获得这样高的成就感，只能通过长期的教育或职业生涯。我不是危言耸听，说游戏毁灭世界，或者游戏将是年轻一代的浩劫，如90年代毒品毁了城市街区那样。但是年轻一代中可能会有大批人因为沉迷游戏，到头来沦落在星巴克打工，而他们本来才华横溢，大有可为。他们把本该努力工作的双十年华献给了电子游戏，然后为了从令人失望的生活中逃避，玩更多的游戏，形成一个恶性循环。\n面对现实吧：如果你觉得WoW让人上瘾，想想十年以后他们会做出什么样的游戏吧。他们只会越做越好。\n","permalink":"/post/2013-09-09-why-video-games-is-addictive/","summary":"\u003cblockquote\u003e\n\u003cp\u003e本文是几年前写的一篇译文，讨论了电子游戏让人上瘾的5个因素，涉及到行为心理学、网游(WoW、征途)以及工作游戏化等。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"http://www.cracked.com/article_18461_5-creepy-ways-video-games-are-trying-to-get-you-addicted.html\"\u003e原文在此\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/1.png\"\u003e\u003c/p\u003e\n\u003cp\u003e报纸上又有玩电子游戏致死的消息。没错，又是韩国。\u003c/p\u003e\n\u003cp\u003e搞毛啊？我可没说电子游戏是海洛因。我完全理解这些渣们的生活有其他各种杯具。但是读者你们很可能见过WoW瘾君子，而且专家也说了电子毒品绝非夸大其词。于是问题是：游戏是故意被设计成这样，让你像得了强迫症一样地去玩它，欲罢不能么？必须的！而且采取的手段真的很可怕。\u003c/p\u003e\n\u003ch2 id=\"no-5-把你放在斯金纳之箱里\"\u003eNo. 5 把你放在“斯金纳之箱”里\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/2.png\"\u003e\u003c/p\u003e\n\u003cp\u003e如果你自己曾对某个游戏痴迷，或者认识这样的人，下面这段会让你很不舒服。作者是微软的一个游戏研究人员，行为学和脑科学博士，讲的是如何把玩家钩在游戏上，欲罢不能。引文如下：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e“每个游戏场景都是时间、行动与奖励的有机体，你可以随意操控它们之间的排列组合，让玩家按预先设定的模式来行动。”\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e请注意，他的文章根本没提到“好玩”或者“愉悦”，这不是他的研究领域。他关注的是“让玩家按预先设定的模式来行动。”\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e“…在这时，低龄玩家会双手举过头顶，精神十分脆弱。”\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/3.png\"\u003e\u003c/p\u003e\n\u003cp\u003e他的理论基于B. F. 斯金纳的工作，即可以通过刺激和奖励可以控制和训练被试者的行为。斯金纳发明了“斯金纳之箱”，一个带有一些装置的箱子，里边的小动物按一个拉杆可以得到一些食物颗粒。我不是说微软这货把玩家看成斯金纳箱里的小白鼠。我的意思是他使用斯金纳箱中的老鼠来阐述他的游戏设计理论。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/4.png\"\u003e\u003c/p\u003e\n\u003cp\u003eNick Yee，一个游戏研究者，曾把“Everquest”（无尽的任务，一个网游）称作“虚拟斯金纳之箱”。\u003c/p\u003e\n\u003ch3 id=\"问题出在哪呢\"\u003e问题出在哪呢？\u003c/h3\u003e\n\u003cp\u003e游戏产业今非昔比。以前他们只是把游戏用50美刀卖给我们，才不管我们会玩多长时间，只要我们能买他们的下一个游戏就好了。但是这个产业的盈利模式正在转向为基于订阅的，如网游，需要玩家持续地在线，一直玩，一直付钱\u0026mdash;-直到太阳爆炸为超新星。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/5.png\"\u003e\u003c/p\u003e\n\u003cp\u003e当然做出再多的地图或者故事，也不可能让你玩上千个小时不重样。所以他们必须改变游戏的机制，让玩家重复地做同样的事，一遍又一遍，欲罢不能。斯金纳之箱就是他们的方法。\u003c/p\u003e\n\u003cp\u003e目前游戏设计界对此有颇多争执。Jonathan Blow说，斯金纳式的游戏机制是一种“探索”的过程，“不是说这些游戏不好玩，而是设计上要考虑如何让玩家觉得厌倦时还能继续玩下去，用斯金纳式的奖惩操控系统，把他们锁在重复性的劳动岗上。”\u003c/p\u003e\n\u003cp\u003e为啥这招这么有效，即使所谓的“奖励”只是些子虚乌有的数字对象？请继续往下看。\u003c/p\u003e\n\u003ch2 id=\"no-4-做出虚拟的食物颗粒给你吃\"\u003eNo. 4 做出虚拟的食物颗粒给你吃\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/6.png\"\u003e\u003c/p\u003e\n\u003cp\u003e大多数让人上瘾的游戏元素得益于以下事实：\u003c/p\u003e\n\u003cp\u003e你的大脑不会区别对待电子游戏中的事物，就好像它们是真的一样。因为它们确实是真的。\u003c/p\u003e\n\u003cp\u003e人们总对此嗤之以鼻(“你花了那么多时间就为拿到一把压根不存在的破剑？”)，但这种蔑视是愚蠢的。只能通过花费时间、精力和技巧才能得到的东西，必定是有价值的，无论是它是钻石做的，还是二进制码或者牛肉筋。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/7.png\"\u003e\u003c/p\u003e\n\u003cp\u003e韩国的最高法院已经判定，虚拟商品法律上与真实商品等效。这些虚拟商品的背后，是一个在世界范围内有50亿美刀的产业。\u003c/p\u003e\n\u003cp\u003e这一点也不疯狂。人们花上千美刀买颗钻石，钻石除了好看也没啥用。电子游戏的装备看上去也很拉风，还能保护你不被兽人侵害。二者是一样的，你在为一个想法付钱。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/8.png\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e结婚纪念日快乐，亲爱的。（意思是不买钻石，买电子游戏装备）\u003c/strong\u003e\u003c/p\u003e\n\u003ch3 id=\"有什么问题吗\"\u003e有什么问题吗？\u003c/h3\u003e\n\u003cp\u003e近25年来的几乎每个游戏都有可收集的物品，这不是什么新鲜玩意，也没啥不好。但因为玩家把游戏物品看做是真实且本身具有价值的，游戏设计者就会故意让玩家去到处收集物品，这种活动和游戏通关的目标毫无关系。\u003c/p\u003e\n\u003cp\u003e设计者绝对是故意的，迎合人们收集的自然本能，让玩家是为了收集而收集。这真的有效，不信你看那个身边有软妹子还在玩游戏收集隐藏物品的家伙。收你妹啊。\u003c/p\u003e\n\u003cp\u003e正如微软那货的文章指出的那样，游戏开发者有意在利用斯金纳箱中的那些食物小颗粒来引诱玩家，接下来就是…\u003c/p\u003e\n\u003ch2 id=\"no-3-让你自己去按下拉杆\"\u003eNo. 3 让你自己去按下拉杆\u003c/h2\u003e\n\u003cp\u003e想象一下箱子里的小白鼠。或者如果你不喜欢把自己想成一只老鼠，想成一只可爱的小仓鼠也可以。小仓鼠可以说话，由Chris Rock配音。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/9.png\"\u003e\u003c/p\u003e\n\u003cp\u003e如果你想让它尽可能快地按下拉杆，怎么做？不要每次它按下时给它食物\u0026mdash;它很快就会懈怠，知道如果它想要，肯定能得到食物。最好的办法是在它按下拉杆时，以一定几率落下食物。它很快就会发了疯一样的按那个拉杆。实验中就是如此。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/10.png\"\u003e\u003c/p\u003e\n\u003cp\u003e在“斯金纳的王国”他们把这叫做“浮动比率奖励”。这就是为什么WoW中许多敌人会随机“掉落”贵重物品的原因。这和老虎机让人上瘾的原因是一样的。你可不能现在走，走了下一个人就全赢了。或者下一个。下下个。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/11.png\"\u003e\u003c/p\u003e\n\u003cp\u003e中国网游“征途”将这种手段用到了极致。游戏中充满了各种宝箱，里面可能有一个随机的物品，要打开箱子，你需要钥匙。如何得到钥匙？用钱买，现实中的钞票。这简直就是老虎机嘛。\u003c/p\u003e\n\u003cp\u003e这还不算。“征途”的手段连赌场都甘拜下风：每天开箱子最多的玩家都会得到一个特别的大奖。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/12.png\"\u003e\u003c/p\u003e\n\u003cp\u003e除了利用到人的赌博天性，成千上万的玩家都在彼此竞争，看谁能开最多的箱子。一个女人告诉我，她曾整个晚上都在开箱子\u0026mdash;-超过一千个\u0026mdash;-试图赢取每日大奖。\u003c/p\u003e\n\u003cp\u003e她没赢。总有人更沉迷。\u003c/p\u003e\n\u003ch3 id=\"so-whats-the-problem\"\u003eSo What\u0026rsquo;s The Problem?\u003c/h3\u003e\n\u003ch3 id=\"有什么问题吗-1\"\u003e有什么问题吗？\u003c/h3\u003e\n\u003cp\u003e你能想象她坐在那，看着她的小人在箱子旁边，一遍又一遍地点对话框，一遍又一遍地看同样的动画效果，就这样消耗掉一小时又一小时？\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/vgames/13.gif\"\u003e\u003c/p\u003e\n\u003cp\u003e如果你不了解，你会觉得她有严重的心理疾病。一个有理性的人怎么可能表现出这种“雨人”一样的强迫症行为？\u003c/p\u003e","title":"电子游戏让你上瘾的5个可怕方法"},{"content":"nest(https://github.com/vindurriel/nest)是一个视觉组件，它用图(graph)来展示元素之间的关系。一个节点(node)表示一个元素或者元素的某个属性，节点之间的连线(link)表示元素之间的关系。 元素和关系的类型、属性都可以是任意定制的。使用者可以和图进行交互， 允许的操作包括拖拽、添加、删除、聚焦、平移和放缩。 节点的颜色由数据实体的type属性决定，不同type即颜色之间的节点，使用一种特殊type的节点连接，这种节点的type是relationship(关系)。\n##为什么要做\n传统的展示元素和关系的视觉组件有列表、树等，但是所能展示的拓扑关系必须是有向无环图(DAG)，通俗的比喻，张三的儿子的儿子不可能是他爹。现实生活中很多元素间的关系满足DAG， 但是不满足例子也很多，比如朋友关系，张三的朋友的朋友可能也是张三的朋友，这在关系上就形成了一个环，不满足DAG。而图可以表示非DAG的拓扑关系，也就是所谓的网络。\nnest是为了展示图而生的视觉组件，它能在二维平面展示复杂的元素关系，并且用户可以实时地修改图的布局、增删节点。\nnest可以作为脑图使用，也可以作为更一般意义上的关系展示图，参见下面的例子。\n##例子\n音乐地图(http://nest.ap01.aws.af.cm/model/python?theme=light)是一个探索音乐元素之间关系的动态地图，展示歌曲、艺术家、专辑和精选集之间的关系。数据抓取自虾米网。\n使用方法如下：\n搜索框中可搜索音乐。\n点击see all可查看其他用户已经探索过的音乐地图。\n保存按钮可以上传当前音乐地图。\n?按钮中可显示图例。\n左键单击节点： 选中该节点，可能会弹出可供扩展的关系节点（如选中歌曲节点，弹出歌曲所在的专辑和歌手）\n左键拖拽： 空白处平移，节点上调整节点位置。\n左键双击节点： 扩展该节点，即添加与该节点有关系的新节点。支持svg动画的浏览器上(chrome、firefox、IE)该节点会振动，并弹出同类型的新节点。\nctrl+左键单击节点： 同左键双击节点。\nshift+左键单击节点： 删除该节点，同时一并删除只与该节点有连线的所有节点\nalt+左键单击节点： 将该节点设为根节点。图本身无所谓根节点，根节点的唯一目的在于以该节点的id来存储图。\n地址栏中可修改theme参数,支持light和dark。\n##技术\nnest在前台采用了d3.js，而d3.js采用了svg。 后台是web.py。 前后台通信采用了ajax和json。\n源代码在github https://github.com/vindurriel/nest。\n##开发计划\n将nest组件化， 允许嵌入到任意的html网页中\n固化二次开发的接口， 提供SDK\n","permalink":"/post/2013-09-04-nest-introduction/","summary":"\u003cp\u003enest(\u003ca href=\"https://github.com/vindurriel/nest\"\u003ehttps://github.com/vindurriel/nest\u003c/a\u003e)是一个视觉组件，它用图(graph)来展示元素之间的关系。一个节点(node)表示一个元素或者元素的某个属性，节点之间的连线(link)表示元素之间的关系。 元素和关系的类型、属性都可以是任意定制的。使用者可以和图进行交互， 允许的操作包括拖拽、添加、删除、聚焦、平移和放缩。\n节点的颜色由数据实体的\u003ccode\u003etype\u003c/code\u003e属性决定，不同type即颜色之间的节点，使用一种特殊type的节点连接，这种节点的type是relationship(关系)。\u003c/p\u003e\n\u003cp\u003e##为什么要做\u003c/p\u003e\n\u003cp\u003e传统的展示元素和关系的视觉组件有列表、树等，但是所能展示的拓扑关系必须是有向无环图(DAG)，通俗的比喻，张三的儿子的儿子不可能是他爹。现实生活中很多元素间的关系满足DAG， 但是不满足例子也很多，比如朋友关系，张三的朋友的朋友可能也是张三的朋友，这在关系上就形成了一个环，不满足DAG。而图可以表示非DAG的拓扑关系，也就是所谓的网络。\u003c/p\u003e\n\u003cp\u003enest是为了展示图而生的视觉组件，它能在二维平面展示复杂的元素关系，并且用户可以实时地修改图的布局、增删节点。\u003c/p\u003e\n\u003cp\u003enest可以作为脑图使用，也可以作为更一般意义上的关系展示图，参见下面的\u003ca href=\"http://nest.ap01.aws.af.cm/model/artist_23401?theme=light\"\u003e例子\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e##例子\u003c/p\u003e\n\u003cp\u003e音乐地图(\u003ca href=\"http://nest.ap01.aws.af.cm/model/artist_23401?theme=light\"\u003ehttp://nest.ap01.aws.af.cm/model/python?theme=light\u003c/a\u003e)是一个探索音乐元素之间关系的动态地图，展示歌曲、艺术家、专辑和精选集之间的关系。数据抓取自\u003ca href=\"http://www.xiami.com\"\u003e虾米网\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/nest/2.png\"\u003e\u003c/p\u003e\n\u003cp\u003e使用方法如下：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e搜索框中可搜索音乐。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e点击\u003ccode\u003esee all\u003c/code\u003e可查看其他用户已经探索过的音乐地图。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003e保存\u003c/code\u003e按钮可以上传当前音乐地图。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003e?\u003c/code\u003e按钮中可显示图例。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e左键单击节点： 选中该节点，可能会弹出可供扩展的关系节点（如选中歌曲节点，弹出歌曲所在的专辑和歌手）\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e左键拖拽： 空白处平移，节点上调整节点位置。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e左键双击节点： 扩展该节点，即添加与该节点有关系的新节点。支持svg动画的浏览器上(chrome、firefox、\u003c!-- raw HTML omitted --\u003eIE\u003c!-- raw HTML omitted --\u003e)该节点会振动，并弹出同类型的新节点。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ectrl+左键单击节点： 同左键双击节点。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eshift+左键单击节点： 删除该节点，同时一并删除\u003cstrong\u003e只与\u003c/strong\u003e该节点有连线的所有节点\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ealt+左键单击节点： 将该节点设为根节点。图本身无所谓根节点，根节点的唯一目的在于以该节点的id来存储图。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e地址栏中可修改theme参数,支持light和dark。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/images/nest/3.png\"\u003e\u003c/p\u003e\n\u003cp\u003e##技术\u003c/p\u003e\n\u003cp\u003enest在前台采用了\u003ca href=\"https://github.com/mbostock/d3/wiki\"\u003ed3.js\u003c/a\u003e，而d3.js采用了svg。 后台是\u003ca href=\"http://webpy.org\"\u003eweb.py\u003c/a\u003e。 前后台通信采用了ajax和json。\u003c/p\u003e\n\u003cp\u003e源代码在github \u003ca href=\"https://github.com/vindurriel/nest\"\u003ehttps://github.com/vindurriel/nest\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e##开发计划\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e将nest组件化， 允许嵌入到任意的html网页中\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e固化二次开发的接口， 提供SDK\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e","title":"nest介绍之音乐地图"},{"content":"虾米网在flash网页播放器中加密了歌曲链接，其中使用到了凯撒方阵（当年觉得好NB啊）。转帖一篇虾米音乐文件绝对地址解析，原作者反编译了虾米的flash网页播放器，并且介绍了解密过程。\n下面简单地介绍一下凯撒方阵的加密原理和过程。\n首先根据字符串长度先选定一个数字n, 然后把原始字符串在一个n行的方阵中从上往下、从左往右写。加密字符串的第一位是选定的数字n，接下来按从左往右、从上往下的顺序把方阵中的字符写下来，如果方阵的最后没有写满的话，最后要写下空位的个数m。\n举例如下。\n虾米网的一个歌曲下载链接是这样的：\nhttp://f1.xiami.net/23259/371119/14%201769402050_1357018.mp3 先选定数字n=8。把0替换成^，然后进行url encode：\nhttp%3A%2F%2Ff1.xiami.net%2F23259%2F371119%2F14%252%5E17694%5E2%5E5%5E_1357%5E18.mp3 然后把该字符串写在行数为8的方阵里，从上往下、从左往右，最后要写上空位的个数m。该字符串长度为84，m = n - (84 + 1) % n =3 。 出现1的原因是m本身也占一个位置。\nh2xt912653. tFi%%959E5m t%a22%2457p p2mFF2%%%%3 %Fi23F55553 3f.371EEEE A1n21412_1 %.e51%7%18 然后按从左往右、从上往下顺序添加到加密字符串，并在开头加上n：\n8h2xt912653.tFi%%959E5mt%a22%2457pp2mFF2%%%%3%Fi23F55553f.371EEEEA1n21412_1%.e51%7%18 加密完成。\n","permalink":"/post/2013-09-03-caesar-encryption/","summary":"\u003cp\u003e虾米网在flash网页播放器中加密了歌曲链接，其中使用到了凯撒方阵（当年觉得好NB啊）。转帖一篇\u003ca href=\"http://kanoha.org/2011/08/30/xiami-absolute-address/\"\u003e虾米音乐文件绝对地址解析\u003c/a\u003e，原作者反编译了虾米的flash网页播放器，并且介绍了解密过程。\u003c/p\u003e\n\u003cp\u003e下面简单地介绍一下凯撒方阵的加密原理和过程。\u003c/p\u003e\n\u003cp\u003e首先根据字符串长度先选定一个数字n, 然后把原始字符串在一个n行的方阵中从上往下、从左往右写。加密字符串的第一位是选定的数字n，接下来按从左往右、从上往下的顺序把方阵中的字符写下来，如果方阵的最后没有写满的话，最后要写下空位的个数m。\u003c/p\u003e\n\u003cp\u003e举例如下。\u003c/p\u003e\n\u003cp\u003e虾米网的一个歌曲下载链接是这样的：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ehttp://f1.xiami.net/23259/371119/14%201769402050_1357018.mp3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e先选定数字n=8。把0替换成^，然后进行url encode：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ehttp%3A%2F%2Ff1.xiami.net%2F23259%2F371119%2F14%252%5E17694%5E2%5E5%5E_1357%5E18.mp3\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e然后把该字符串写在行数为8的方阵里，从上往下、从左往右，最后要写上空位的个数m。该字符串长度为84，m = n - (84 + 1) % n =3 。 出现1的原因是m本身也占一个位置。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eh2xt912653.\ntFi%%959E5m\nt%a22%2457p\np2mFF2%%%%3\n%Fi23F55553\n3f.371EEEE\nA1n21412_1\n%.e51%7%18\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e然后按从左往右、从上往下顺序添加到加密字符串，并在开头加上n：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e8h2xt912653.tFi%%959E5mt%a22%2457pp2mFF2%%%%3%Fi23F55553f.371EEEEA1n21412_1%.e51%7%18\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e加密完成。\u003c/p\u003e","title":"凯撒方阵"},{"content":"每个程序员都应该有一个宠物项目(pet project)， 用来尝试想法、磨练技巧。 xiami_downloader 是我近两年来的宠物项目。\n##初心\n最初就是想做一个虾米网的免费下载软件。几年前开始，喜欢在虾米网在线听歌。下载高音质歌曲是收费的，而且官方软件（虾客）不好用。 有人可能问，为什么不直接在线收听，非要下载。原因是我有在手机听歌的习惯，但是没有开通3G服务，据说地铁里信号不好。\n通过google找到了LongkeyMusic(以下简称LKM)，这个软件的功能是从虾米网批量下载一张专辑的歌曲。然而如果你想下载某张精选集里的歌曲，或者歌曲的歌词等，这个软件爱莫能助，当时的LKM没有这些功能。\nLKM是用.NET写的，而且作者很厚道地没有做混淆。同事胖子向我展示了反编译利器.NET Reflector的厉害。 在此想对原作者表示感谢（和抱歉）。\n第一版的xiami_downloader是直接对LongKeyMusic的hack，功能方面主要增加了我想要的精选集歌曲下载、歌词下载。界面部分LKM采用.NET 3.5下的WinForm，而我们用的是WPF（.NET 4.0推出的界面库）。\n从此开始了漫长的hacking 之路。\n##道阻且长\nxiami_downloader经过了几次大的重构，增加了很多新的功能，界面更是换了不知道多少次。 这个过程中学到了很多东西，总结起来如下：\n###产品\n最大的收获可能就是如何去规划和实现一个产品。从收集和过滤用户需求开始，到界面和功能设计、实现，再到代码重构、自动部署。\n做自己每天都会使用的软件，是一件很快乐的事。动力当然不是问题， 但更加需要有对开发价值的判断。我是一个相信奥卡姆剃刀法则的人。 如果一个功能可有可无， 那么宁愿砍掉。\n如果一个UI元素不需要时刻都出现，那么就隐藏它，避免破坏画面简洁的美感。\n###重构\n经过了几次大的重构，每次目的不一样，大体上可归纳为在两个方面增加便利性：新增和除错。要使新增方便，必然要提高代码的重用性，比较极端的是源自ruby的DRY（don\u0026rsquo;t repeat yourself）原则。要使除错方便，必须改进代码的逻辑结构，并且在各种渠道提高错误的能见度，比如log、tip、MessageBox等。\n###git\n之前一直用SVN做代码管理，与之相比，git的commit与push分离让offline状态下的工作有了更大的灵活性。 1个人的项目基本只用两个分支：master和dev，多了麻烦。\n###异步方法与非阻塞UI\n以前在silverlight中接触过异步方法，而在xiami_downloader中，我体会到要获得流畅的用户体验，需要在很多的方面使用异步方法，目的是不阻塞UI线程。WPF在这方面提供了很多编程上的条件，包括Dispatcher、Task等。\n###密码学\n包括凯撒方阵、api signature的生成、md5的使用等。\n###跨进程通信（IPC）\n主程序代码是C#，需要和C#、AutoHotKey(AHK)以及python进行IPC。先后接触到了IPC方面的集大成者ZeroMq、.NET自带的WCF，还有最原始的基于文件的IPC。\n###RESTful API以及OAuth\n虾米推出了自己在iOS和android平台的apps, 伴随而来的是一套用于pc和平台的RESTful API。虽然没有对外公布，但是在android的apk源码里看得到。还有一部分api的入口点是google到的，曾经能在google快照中看到虾米内部api的wiki，用python写的。\n虾米采用了一种奇怪的OAuth验证，获取access token时要输入用户的密码（用md5加密）。 大概是想和第三方app的登录验证兼容吧。\n###扁平化设计\n最初是从windows 8和gmail接触到了扁平化设计，和我的审美理念很一致。然而实践扁平化设计并非易事， 对于颜色对比、留白大小的要求更加严格，找到能望图知义的icon也更加困难。\n###自动更新\n考虑了自动更新的基本原理。开始时把可执行程序托管到github上，但后来由于众所周知的访问限制，选择了国内的云存储服务：百度网盘。百度网盘采用的是更为标准的、继承自dropbox的RESTful API，即所谓的PCS。\n###断点续传与下载器的线程控制\n通过实现断点续传功能，对http协议有了更底层的了解。而多任务下载的需求，让我接触到了锁、资源池等概念，以及.NET 4.5引入的async/await机制\n##下一站？\n某种意义上，一个软件的开发过程不应该有自然的结束，因为需求和资源总是在变化之中。但是写这篇文章的目的，就是为这个伴随我两年的宠物项目画上一个(暂时的)句号。原因有二：\n对项目目前的状态比较满意，能想到的功能基本上都实现（或者否决）了。需要输入更多用户的反馈，才能继续向前走。\n是时候培养一个新的pet project，来尝试一些更加不一样的想法和技巧了。 毕竟xiami_downloader是一个pc 客户端， 涉及到web和移动平台方面的相关技术和思想，强行整合的话也不是不行，但是别扭。\n在接下来的一段时间，不会再对该项目进行开发，而是会写一些总结性、介绍性的文字，承前启后，继往开来。\n对于自己创造出的事物，人们很自然的会有一种喜爱之情。因此我想对xiami_downloader说一声：谢谢，再见。\n","permalink":"/post/2013-08-09-xiami-introduction/","summary":"\u003cp\u003e每个程序员都应该有一个宠物项目(pet project)， 用来尝试想法、磨练技巧。 \u003ca href=\"https://github.com/vindurriel/xiami_downloader\"\u003exiami_downloader\u003c/a\u003e 是我近两年来的宠物项目。\u003c/p\u003e\n\u003cp\u003e##初心\u003c/p\u003e\n\u003cp\u003e最初就是想做一个虾米网的免费下载软件。几年前开始，喜欢在\u003ca href=\"http://www.xiami.com/\"\u003e虾米网\u003c/a\u003e在线听歌。下载高音质歌曲是收费的，而且官方软件（虾客）不好用。\n有人可能问，为什么不直接在线收听，非要下载。原因是我有在手机听歌的习惯，但是没有开通3G服务，据说地铁里信号不好。\u003c/p\u003e\n\u003cp\u003e通过google找到了\u003ca href=\"http://longkeymusic.com/\"\u003eLongkeyMusic\u003c/a\u003e(以下简称LKM)，这个软件的功能是从虾米网批量下载一张专辑的歌曲。然而如果你想下载某张精选集里的歌曲，或者歌曲的歌词等，这个软件爱莫能助，当时的LKM没有这些功能。\u003c/p\u003e\n\u003cp\u003eLKM是用.NET写的，而且作者很厚道地没有做混淆。同事\u003ca href=\"http://weibo.com/818871231\"\u003e胖子\u003c/a\u003e向我展示了反编译利器.NET Reflector的厉害。 在此想对原作者表示感谢（和抱歉）。\u003c/p\u003e\n\u003cp\u003e第一版的xiami_downloader是直接对LongKeyMusic的hack，功能方面主要增加了我想要的精选集歌曲下载、歌词下载。界面部分LKM采用.NET 3.5下的WinForm，而我们用的是WPF（.NET 4.0推出的界面库）。\u003c/p\u003e\n\u003cp\u003e从此开始了漫长的hacking 之路。\u003c/p\u003e\n\u003cp\u003e##道阻且长\u003c/p\u003e\n\u003cp\u003exiami_downloader经过了几次大的重构，增加了很多新的功能，界面更是换了不知道多少次。\n这个过程中学到了很多东西，总结起来如下：\u003c/p\u003e\n\u003cp\u003e###产品\u003c/p\u003e\n\u003cp\u003e最大的收获可能就是如何去规划和实现一个产品。从收集和过滤用户需求开始，到界面和功能设计、实现，再到代码重构、自动部署。\u003c/p\u003e\n\u003cp\u003e做自己每天都会使用的软件，是一件很快乐的事。动力当然不是问题， 但更加需要有对开发价值的判断。我是一个相信奥卡姆剃刀法则的人。 如果一个功能可有可无， 那么宁愿砍掉。\u003c/p\u003e\n\u003cp\u003e如果一个UI元素不需要时刻都出现，那么就隐藏它，避免破坏画面简洁的美感。\u003c/p\u003e\n\u003cp\u003e###重构\u003c/p\u003e\n\u003cp\u003e经过了几次大的重构，每次目的不一样，大体上可归纳为在两个方面增加便利性：新增和除错。要使新增方便，必然要提高代码的重用性，比较极端的是源自ruby的DRY（don\u0026rsquo;t repeat yourself）原则。要使除错方便，必须改进代码的逻辑结构，并且在各种渠道提高错误的能见度，比如log、tip、MessageBox等。\u003c/p\u003e\n\u003cp\u003e###git\u003c/p\u003e\n\u003cp\u003e之前一直用SVN做代码管理，与之相比，git的commit与push分离让offline状态下的工作有了更大的灵活性。 1个人的项目基本只用两个分支：master和dev，多了麻烦。\u003c/p\u003e\n\u003cp\u003e###异步方法与非阻塞UI\u003c/p\u003e\n\u003cp\u003e以前在silverlight中接触过异步方法，而在xiami_downloader中，我体会到要获得流畅的用户体验，需要在很多的方面使用异步方法，目的是不阻塞UI线程。WPF在这方面提供了很多编程上的条件，包括Dispatcher、Task等。\u003c/p\u003e\n\u003cp\u003e###密码学\u003c/p\u003e\n\u003cp\u003e包括凯撒方阵、api signature的生成、md5的使用等。\u003c/p\u003e\n\u003cp\u003e###跨进程通信（IPC）\u003c/p\u003e\n\u003cp\u003e主程序代码是C#，需要和C#、AutoHotKey(AHK)以及python进行IPC。先后接触到了IPC方面的集大成者\u003ca href=\"http://www.zeromq.org/\"\u003eZeroMq\u003c/a\u003e、.NET自带的WCF，还有最原始的基于文件的IPC。\u003c/p\u003e\n\u003cp\u003e###RESTful API以及OAuth\u003c/p\u003e\n\u003cp\u003e虾米推出了自己在iOS和android平台的apps, 伴随而来的是一套用于pc和平台的RESTful API。虽然没有对外公布，但是在android的apk源码里看得到。还有一部分api的入口点是google到的，曾经能在google快照中看到虾米内部api的wiki，用python写的。\u003c/p\u003e\n\u003cp\u003e虾米采用了一种奇怪的OAuth验证，获取access token时要输入用户的密码（用md5加密）。\n大概是想和第三方app的登录验证兼容吧。\u003c/p\u003e\n\u003cp\u003e###扁平化设计\u003c/p\u003e\n\u003cp\u003e最初是从windows 8和gmail接触到了扁平化设计，和我的审美理念很一致。然而实践扁平化设计并非易事， 对于颜色对比、留白大小的要求更加严格，找到能望图知义的icon也更加困难。\u003c/p\u003e\n\u003cp\u003e###自动更新\u003c/p\u003e\n\u003cp\u003e考虑了自动更新的基本原理。开始时把可执行程序托管到github上，但后来由于众所周知的访问限制，选择了国内的云存储服务：百度网盘。百度网盘采用的是更为标准的、继承自dropbox的RESTful API，即所谓的PCS。\u003c/p\u003e\n\u003cp\u003e###断点续传与下载器的线程控制\u003c/p\u003e\n\u003cp\u003e通过实现断点续传功能，对http协议有了更底层的了解。而多任务下载的需求，让我接触到了锁、资源池等概念，以及.NET 4.5引入的async/await机制\u003c/p\u003e\n\u003cp\u003e##下一站？\u003c/p\u003e\n\u003cp\u003e某种意义上，一个软件的开发过程不应该有自然的结束，因为需求和资源总是在变化之中。但是写这篇文章的目的，就是为这个伴随我两年的宠物项目画上一个(暂时的)句号。原因有二：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e对项目目前的状态比较满意，能想到的功能基本上都实现（或者否决）了。需要输入更多用户的反馈，才能继续向前走。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e是时候培养一个新的pet project，来尝试一些更加不一样的想法和技巧了。 毕竟xiami_downloader是一个pc 客户端， 涉及到web和移动平台方面的相关技术和思想，强行整合的话也不是不行，但是别扭。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e在接下来的一段时间，不会再对该项目进行开发，而是会写一些总结性、介绍性的文字，承前启后，继往开来。\u003c/p\u003e\n\u003cp\u003e对于自己创造出的事物，人们很自然的会有一种喜爱之情。因此我想对\u003ca href=\"https://github.com/vindurriel/xiami_downloader\"\u003exiami_downloader\u003c/a\u003e说一声：谢谢，再见。\u003c/p\u003e","title":"虾米下载介绍"},{"content":"下图是用d3中的forced graph画出的post和tag的关联关系。为了区别post和tag，使用了两种颜色， 并且施加了两个力场，把post向左推，tag向右推。\n{% raw %} //准备post和tag的关联数据 var graph={ \u0026#34;nodes\u0026#34;:[], \u0026#34;links\u0026#34;:[], }; var hash_tag={}; var post_id=0,tag_id=0; {% for post in site.posts %} graph.nodes.push({ \u0026#34;name\u0026#34;: \u0026#34;{{ post.title }}\u0026#34;, \u0026#34;url\u0026#34;:\u0026#34;{{post.url}}\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;post\u0026#34;, }); post_id=graph.nodes.length-1; {% for tag in post.tags %} if(hash_tag[\u0026#34;{{tag}}\u0026#34;]===undefined){ graph.nodes.push({ \u0026#34;name\u0026#34;: \u0026#34;{{ tag }}\u0026#34;, \u0026#34;url\u0026#34;:\u0026#34;/tags.html\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;tag\u0026#34;, }); tag_id=graph.nodes.length-1; hash_tag[\u0026#34;{{tag}}\u0026#34;]=tag_id; } else { tag_id=hash_tag[\u0026#34;{{tag}}\u0026#34;]; } graph.links.push({ \u0026#34;source\u0026#34;:post_id, \u0026#34;target\u0026#34;:tag_id, \u0026#34;value\u0026#34;:1 }); {% endfor %} {% endfor %} //数据准备完毕，开始画图 var width = 400, height = 400; //两个力场的中心位置 var foci={ \u0026#34;post\u0026#34;:{\u0026#34;x\u0026#34;:0,\u0026#34;y\u0026#34;:height/2}, \u0026#34;tag\u0026#34;:{\u0026#34;x\u0026#34;:width,\u0026#34;y\u0026#34;:height/2}, }; var color = d3.scale.category10(); var force = d3.layout.force() .linkDistance(100) .linkStrength(.3) .gravity(0) .size([width, height]); var svg = d3.select(\u0026#34;#svg\u0026#34;).append(\u0026#34;svg\u0026#34;) .attr(\u0026#34;width\u0026#34;, width) .attr(\u0026#34;height\u0026#34;, height); force .charge(-400) .nodes(graph.nodes) .links(graph.links) .start(); var link = svg.selectAll(\u0026#34;.link\u0026#34;) .data(graph.links) .enter().append(\u0026#34;line\u0026#34;) .attr(\u0026#34;class\u0026#34;, \u0026#34;link\u0026#34;); var node = svg.selectAll(\u0026#34;.node\u0026#34;) .data(graph.nodes) .enter().append(\u0026#34;circle\u0026#34;) .attr(\u0026#34;class\u0026#34;, \u0026#34;node\u0026#34;) .attr(\u0026#34;r\u0026#34;,10) .on(\u0026#34;click\u0026#34;,function(d){ window.open(d.url); }) .style(\u0026#34;cursor\u0026#34;,\u0026#34;pointer\u0026#34;) .style(\u0026#34;fill\u0026#34;, function(d) { return color(d.type); }) .call(force.drag); node.append(\u0026#34;title\u0026#34;) .text(function(d) { return d.name; }); force.on(\u0026#34;tick\u0026#34;, function(e) { link.attr(\u0026#34;x1\u0026#34;, function(d) { return d.source.x; }) .attr(\u0026#34;y1\u0026#34;, function(d) { return d.source.y; }) .attr(\u0026#34;x2\u0026#34;, function(d) { return d.target.x; }) .attr(\u0026#34;y2\u0026#34;, function(d) { return d.target.y; }); //e.alpha是“温度”，粒子的“活性”与之相关，它是一个不断下降的变量，模拟冷却过程。 var k = .5 * e.alpha; //让每个粒子都被力场减速吸向中心，直到温度为0 //同时每个粒子还受到库仑力(由force.charge定义)，从而彼此不会聚合在一起。 graph.nodes.forEach(function(o, i) { o.y += (foci[o.type].y - o.y) * k; o.x += (foci[o.type].x - o.x) * k; }); node.attr(\u0026#34;cx\u0026#34;, function(d) { return d.x; }) .attr(\u0026#34;cy\u0026#34;, function(d) { return d.y; }); }); {% endraw %} 效果如下：\n参考了下面两个例子：\nCustom Forces Labeled Force Layout ","permalink":"/post/2013-07-26-forced-graph/","summary":"\u003cp\u003e下图是用d3中的forced graph画出的post和tag的关联关系。为了区别post和tag，使用了两种颜色，\n并且施加了两个力场，把post向左推，tag向右推。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eraw\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//准备post和tag的关联数据\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egraph\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;nodes\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e[],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;links\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e[],\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e};\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehash_tag\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{};\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003epost_id\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e,\u003cspan style=\"color:#a6e22e\"\u003etag_id\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003epost\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esite\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eposts\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003egraph\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003enodes\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003epush\u003c/span\u003e({\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{{ post.title }}\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;url\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{{post.url}}\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;post\u0026#34;\u003c/span\u003e, \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    });\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003epost_id\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003egraph\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003enodes\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003elength\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    {\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etag\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003epost\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etags\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ehash_tag\u003c/span\u003e[\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{{tag}}\u0026#34;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e===\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eundefined\u003c/span\u003e){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003egraph\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003enodes\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003epush\u003c/span\u003e({\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;name\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{{ tag }}\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;url\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/tags.html\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;tag\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            });\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003etag_id\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003egraph\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003enodes\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003elength\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003ehash_tag\u003c/span\u003e[\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{{tag}}\u0026#34;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etag_id\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        } \u003cspan style=\"color:#66d9ef\"\u003eelse\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#a6e22e\"\u003etag_id\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ehash_tag\u003c/span\u003e[\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{{tag}}\u0026#34;\u003c/span\u003e];\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003egraph\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003elinks\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003epush\u003c/span\u003e({\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;source\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003epost_id\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;target\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etag_id\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        });\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    {\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eendfor\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eendfor\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//数据准备完毕，开始画图\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ewidth\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e400\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eheight\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e400\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e//两个力场的中心位置\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003efoci\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;post\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e{\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;x\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;y\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eheight\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;tag\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e{\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;x\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ewidth\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;y\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eheight\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e},\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e};\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ecolor\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed3\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003escale\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ecategory10\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eforce\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed3\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003elayout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eforce\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003elinkDistance\u003c/span\u003e(\u003cspan style=\"color:#ae81ff\"\u003e100\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003elinkStrength\u003c/span\u003e(.\u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003egravity\u003c/span\u003e(\u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e.\u003cspan style=\"color:#a6e22e\"\u003esize\u003c/span\u003e([\u003cspan style=\"color:#a6e22e\"\u003ewidth\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eheight\u003c/span\u003e]);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esvg\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed3\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eselect\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;#svg\u0026#34;\u003c/span\u003e).\u003cspan style=\"color:#a6e22e\"\u003eappend\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;svg\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;width\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ewidth\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;height\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eheight\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eforce\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003echarge\u003c/span\u003e(\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e400\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003enodes\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003egraph\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003enodes\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003elinks\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003egraph\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003elinks\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003estart\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003elink\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esvg\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eselectAll\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.link\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003edata\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003egraph\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003elinks\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003eenter\u003c/span\u003e().\u003cspan style=\"color:#a6e22e\"\u003eappend\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;line\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;class\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;link\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003enode\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esvg\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eselectAll\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.node\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003edata\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003egraph\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003enodes\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003eenter\u003c/span\u003e().\u003cspan style=\"color:#a6e22e\"\u003eappend\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;circle\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;class\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;node\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;r\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003eon\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;click\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        window.\u003cspan style=\"color:#a6e22e\"\u003eopen\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eurl\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    })\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003estyle\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;cursor\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;pointer\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003estyle\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;fill\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e) { \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ecolor\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etype\u003c/span\u003e); })\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003ecall\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eforce\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003edrag\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003enode\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eappend\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;title\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003etext\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e) { \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e; });\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eforce\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eon\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;tick\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ee\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003elink\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;x1\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e) { \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003esource\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e; })\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        .\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;y1\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e) { \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003esource\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e; })\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        .\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;x2\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e) { \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etarget\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e; })\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        .\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;y2\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e) { \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etarget\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e; });\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e//e.alpha是“温度”，粒子的“活性”与之相关，它是一个不断下降的变量，模拟冷却过程。\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ek\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e .\u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ee\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ealpha\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e//让每个粒子都被力场减速吸向中心，直到温度为0\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#75715e\"\u003e//同时每个粒子还受到库仑力(由force.charge定义)，从而彼此不会聚合在一起。\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e    \u003cspan style=\"color:#a6e22e\"\u003egraph\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003enodes\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eforEach\u003c/span\u003e(\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eo\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ei\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eo\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+=\u003c/span\u003e (\u003cspan style=\"color:#a6e22e\"\u003efoci\u003c/span\u003e[\u003cspan style=\"color:#a6e22e\"\u003eo\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etype\u003c/span\u003e].\u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eo\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ek\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#a6e22e\"\u003eo\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+=\u003c/span\u003e (\u003cspan style=\"color:#a6e22e\"\u003efoci\u003c/span\u003e[\u003cspan style=\"color:#a6e22e\"\u003eo\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etype\u003c/span\u003e].\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eo\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e) \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ek\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    });\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003enode\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;cx\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e) { \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e; })\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        .\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;cy\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e) { \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e; });\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e});\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eendraw\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e效果如下：\u003c/p\u003e","title":"forced graph"},{"content":"最近想用更好的方式呈现blog和tag之间的关系，也就是重写本博客的标签页面。\nlog和tag之间是多对多的关系，就是说一篇blog可以有多个tag，一个tag可以包含多篇blog。适合表现这种映射关系的图表叫做平行集（Parallel Set）。\n平行集是反应两组或以上数据集之间映射关系的图表。\nd3是一个用javascript的库，主要用途是用svg做数据可视化。\nd3非常强大，基本上能想到的图表都可以实现。而对于平行集，d3有一个插件d3.parsets。\n需要添加如下css和js：\nd3.parsets.css d3.v3.min.js d3.parsets.js 然后在tags.html里写一些javascript。\n先构造出所有post和tag的对应数据。d3.parsets使用csv格式，所以要先生成一个csv格式的字符串。在这里，列名就是post,tag。 比如本篇blog对应两个tag：d3和visualization，那么要在csv里添加两行:\n{{ page.title }},d3 {{ page.title }},visualization 相关代码如下：\n{%raw%} var csv=\u0026#34;post,tag\u0026#34;; {% for post in site.posts %} {% for tag in post.tags %} csv+=\u0026#34;\\n{{post.title}},{{tag}}\u0026#34;; {% endfor %} {% endfor %} {%endraw%} 接着实例化一个chart，再把数据给它：\nvar chart = d3.parsets() .tension(0.8) .width(\u0026#34;800\u0026#34;) .height(\u0026#34;480\u0026#34;) .dimensions([\u0026#34;tag\u0026#34;,\u0026#34;post\u0026#34;]); var vis = d3.select(\u0026#34;#vis\u0026#34;).append(\u0026#34;svg\u0026#34;) .attr(\u0026#34;width\u0026#34;, chart.width()) .attr(\u0026#34;height\u0026#34;, chart.height()); var parsed_csv=d3.csv.parse(csv); vis.datum(parsed_csv).call(chart); 我还想实现这样一个功能：点击图中的博客时可以跳转到博客页面。\n{%raw%} var posts={}; {% for post in site.posts %} posts[\u0026#34;{{post.title}}\u0026#34;]={ \u0026#34;url\u0026#34;:\u0026#34;{{post.url}}\u0026#34;, }; {% endfor %} vis.selectAll(\u0026#34;.category text\u0026#34;).on(\u0026#34;click\u0026#34;,function(d){ if(!(d.name in posts)) return; window.open(posts[d.name].url); }); {%endraw%} d3虽然可以看到很多jQuery的影子， 但在data和view的生成方式上很独特，非常的描述化。 这篇文章是作者自己总结的d3处理数据上的一种模式，也就是所谓的join。\n","permalink":"/post/2013-07-22-post-tag-diagram-with-d3/","summary":"\u003cp\u003e最近想用更好的方式呈现blog和tag之间的关系，也就是重写本博客的\u003ca href=\"/tags.html\"\u003e标签页面\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003elog和tag之间是多对多的关系，就是说一篇blog可以有多个tag，一个tag可以包含多篇blog。适合表现这种映射关系的图表叫做平行集（Parallel Set）。\u003c/p\u003e\n\u003cp\u003e平行集是反应两组或以上数据集之间映射关系的图表。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/mbostock/d3/wiki/Gallery\"\u003ed3\u003c/a\u003e是一个用javascript的库，主要用途是用svg做数据可视化。\u003c/p\u003e\n\u003cp\u003ed3非常强大，基本上能想到的图表都可以实现。而对于平行集，d3有一个插件\u003ca href=\"https://github.com/jasondavies/d3-parsets\"\u003ed3.parsets\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e需要添加如下css和js：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ed3.parsets.css\u003c/li\u003e\n\u003cli\u003ed3.v3.min.js\u003c/li\u003e\n\u003cli\u003ed3.parsets.js\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e然后在tags.html里写一些javascript。\u003c/p\u003e\n\u003cp\u003e先构造出所有post和tag的对应数据。\u003ca href=\"https://github.com/jasondavies/d3-parsets\"\u003ed3.parsets\u003c/a\u003e使用csv格式，所以要先生成一个csv格式的字符串。在这里，列名就是\u003ccode\u003epost,tag\u003c/code\u003e。\n比如本篇blog对应两个tag：\u003ccode\u003ed3\u003c/code\u003e和\u003ccode\u003evisualization\u003c/code\u003e，那么要在csv里添加两行:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{ page.title }},d3\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{{ page.title }},visualization\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e相关代码如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eraw\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ecsv\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;post,tag\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003epost\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esite\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eposts\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etag\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003epost\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003etags\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#a6e22e\"\u003ecsv\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e+=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\\n{{post.title}},{{tag}}\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eendfor\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eendfor\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eendraw\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e接着实例化一个chart，再把数据给它：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003echart\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed3\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eparsets\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t  .\u003cspan style=\"color:#a6e22e\"\u003etension\u003c/span\u003e(\u003cspan style=\"color:#ae81ff\"\u003e0.8\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t  .\u003cspan style=\"color:#a6e22e\"\u003ewidth\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;800\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t  .\u003cspan style=\"color:#a6e22e\"\u003eheight\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;480\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      .\u003cspan style=\"color:#a6e22e\"\u003edimensions\u003c/span\u003e([\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;tag\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;post\u0026#34;\u003c/span\u003e]);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003evis\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ed3\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eselect\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;#vis\u0026#34;\u003c/span\u003e).\u003cspan style=\"color:#a6e22e\"\u003eappend\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;svg\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;width\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003echart\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ewidth\u003c/span\u003e())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    .\u003cspan style=\"color:#a6e22e\"\u003eattr\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;height\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003echart\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eheight\u003c/span\u003e());\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eparsed_csv\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ed3\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ecsv\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eparse\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ecsv\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003evis\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003edatum\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eparsed_csv\u003c/span\u003e).\u003cspan style=\"color:#a6e22e\"\u003ecall\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003echart\u003c/span\u003e);\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003e我还想实现这样一个功能：点击图中的博客时可以跳转到博客页面。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-javascript\" data-lang=\"javascript\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eraw\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eposts\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{};\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003epost\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003esite\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eposts\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#a6e22e\"\u003eposts\u003c/span\u003e[\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{{post.title}}\u0026#34;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;url\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{{post.url}}\u0026#34;\u003c/span\u003e,\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t};\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eendfor\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003evis\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eselectAll\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.category text\u0026#34;\u003c/span\u003e).\u003cspan style=\"color:#a6e22e\"\u003eon\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;click\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e){\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e(\u003cspan style=\"color:#f92672\"\u003e!\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ein\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eposts\u003c/span\u003e)) \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\twindow.\u003cspan style=\"color:#a6e22e\"\u003eopen\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eposts\u003c/span\u003e[\u003cspan style=\"color:#a6e22e\"\u003ed\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e].\u003cspan style=\"color:#a6e22e\"\u003eurl\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e});\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eendraw\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e}\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\n\u003cp\u003ed3虽然可以看到很多jQuery的影子， 但在data和view的生成方式上很独特，非常的描述化。\n\u003ca href=\"http://bost.ocks.org/mike/join/\"\u003e这篇文章\u003c/a\u003e是作者自己总结的d3处理数据上的一种模式，也就是所谓的\u003ccode\u003ejoin\u003c/code\u003e。\u003c/p\u003e","title":"用d3.js来呈现post-tag的多对多关系"},{"content":"github pages默认使用两个分支：master和gh-pages。 在两个分支间切换很不方便：在gh-pages写了一些blog， 然后切回master进行一次push，才能让服务器重新build。\n但是可以删除master。 首先到github.com的repo设置里面把默认分支设为gh-pages，然后删除master分支，最后回到本地，用 git branch -D master 删除master分支。\n但是删除master后，发现远端页面更新非常缓慢，而且页面状态不稳定（有的页面更新了，有的则没有）。因此后来恢复了用两个分支。有文章介绍可以用post commit hook来保持两个分支的一致性。\n###update 2013-08-07\n写了一个bat脚本，取名push.bat\n@echo off rem 提示用户输入comment set /p comment=\u0026#34;comments:\u0026#34; rem 在master分支上commit git commit -am \u0026#34;%comment%\u0026#34; git checkout gh-pages rem rebase命令使得gh-pages和master同步，然后生成一个commit git rebase master git checkout master git push 使用时直接输入push\n","permalink":"/post/2013-07-21-delete-master-branch-on-github-pages/","summary":"\u003cp\u003egithub pages默认使用两个分支：master和gh-pages。 在两个分支间切换很不方便：在gh-pages写了一些blog， 然后切回master进行一次push，才能让服务器重新build。\u003c/p\u003e\n\u003cp\u003e\u003c!-- raw HTML omitted --\u003e但是可以删除master。 首先到github.com的repo设置里面把默认分支设为gh-pages，然后删除master分支，最后回到本地，用 \u003ccode\u003egit branch -D master\u003c/code\u003e 删除master分支。\u003c!-- raw HTML omitted --\u003e\u003c/p\u003e\n\u003cp\u003e但是删除master后，发现远端页面更新非常缓慢，而且页面状态不稳定（有的页面更新了，有的则没有）。因此后来恢复了用两个分支。\u003ca href=\"http://lea.verou.me/2011/10/easily-keep-gh-pages-in-sync-with-master/\"\u003e有文章\u003c/a\u003e介绍可以用post commit hook来保持两个分支的一致性。\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003e###update 2013-08-07\u003c/p\u003e\n\u003cp\u003e写了一个bat脚本，取名\u003ccode\u003epush.bat\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bat\" data-lang=\"bat\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e@\u003cspan style=\"color:#66d9ef\"\u003eecho\u003c/span\u003e off\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003erem 提示用户输入comment\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eset\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003e/p\u003c/span\u003e comment=\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;comments:\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003erem 在master分支上commit\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit commit -am \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e%comment%\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit checkout gh-pages\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003erem rebase命令使得gh-pages和master同步，然后生成一个commit\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit rebase master\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit checkout master\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003egit push\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用时直接输入push\u003c/p\u003e","title":"删除github pages的master分支"},{"content":"首先去github pages申请一个页面，默认的域名是http://USERNAME.github.io，其中USERNAME是你的github用户名。\ngithub使用jekyll做解析引擎。可以直接克隆一个别人写好的jekyll，然后把上传路径改成自己的，像这样：\ngit clone https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com cd USERNAME.github.com git remote set-url origin git@github.com:USERNAME/USERNAME.github.com.git git push origin master 这个例子中使用的是jekyll-bootstrap。\n###写文章\n如果装了ruby的话，直接在文件夹下执行\nrake post title=\u0026quot;a new post\u0026quot; 就可以新建一篇文章。内容支持markdown。\n其实就是在_post目录下新建了一个md文件，文件名格式为年-月-日-标题.md。 文件开始是一些元信息，比如本文的md文件开头是这样的：\n--- layout: post title: \u0026#34;github pages 配置\u0026#34; description: \u0026#34;rake post title=\u0026amp;quot;a new post\u0026amp;quot; layout: post title: \u0026quot;github pages 配置\u0026quot; description: \u0026quot;\u0026quot; category: misc tags: [jekyll,github pages,setup] 写好了内容部分，直接`git commit`然后`git push`到master分支就可以了。 comments : provider : disqus disqus : short_name : YOUR_DISQUS_SITE_NAME 你需要去disqus.com注册一个用户，然后在dashboard中新建一个站点，注意把`short_name`设置为配置文件中的那个`YOUR_DISQUS_SITE_NAME`。 $ CHCP 65001 如果是在git bash中的话，需要设置如下环境变量： export LC_ALL = enUS.UTF-8 export LANG = enUS.UTF-8 然后就可以 `jekyll serve --watch`了。 gem uninstall pygments.rb --version \u0026amp;quot;\u0026amp;gt;0.5.0\u0026amp;quot; gem install pygments.rb --version \u0026amp;quot;=0.5.0\u0026amp;quot;\u0026#34; category: misc tags: [jekyll,github pages,setup] --- 写好了内容部分，直接git commit然后git push到master分支就可以了。\n###评论\njekyll-bootstrap本身不提供评论功能，而是通过配置文件引入第三方评论插件， 比如disqus。\n配置集中在_config.yml中，与评论功能有关的配置可以这样写：\ncomments : provider : disqus disqus : short_name : YOUR_DISQUS_SITE_NAME 你需要去disqus.com注册一个用户，然后在dashboard中新建一个站点，注意把short_name设置为配置文件中的那个YOUR_DISQUS_SITE_NAME。\ndisqus插件的语言可以切换为中文，需要在disqus.com登陆后进入admin-\u0026gt;settings，也就是 http://USERNAME.disqus.com/admin/settings/，里面可以设置language。\n###分享\njekyll-bootstrap的分享功能还没写好， 所以我找了个国内比较成熟的社会化分享平台： 加网。把js粘到模板里就行。\n###中文编码问题 windows下本jekyll在解析中文的页面时会报编码错误。如果使用cmd的话，需要把代码页改成utf-8：\n$ CHCP 65001 如果是在git bash中的话，需要设置如下环境变量：\nexport LC_ALL = enUS.UTF-8 export LANG = enUS.UTF-8 然后就可以 jekyll serve --watch了。\n###代码高亮\n默认使用pygments.rb。 版本高于0.5.0在windows和ruby1.9.3下显示不出来，需要安装0.5.0，即\ngem uninstall pygments.rb --version \u0026quot;\u0026gt;0.5.0\u0026quot; gem install pygments.rb --version \u0026quot;=0.5.0\u0026quot; 还需要一个代码高亮的css的文件，google pygments css style可以找到好多。\n","permalink":"/post/2013-07-19-github-pages-setup/","summary":"\u003cp\u003e首先去github pages申请一个页面，默认的域名是\u003ccode\u003ehttp://USERNAME.github.io\u003c/code\u003e，其中\u003ccode\u003eUSERNAME\u003c/code\u003e是你的github用户名。\u003c/p\u003e\n\u003cp\u003egithub使用jekyll做解析引擎。可以直接克隆一个别人写好的jekyll，然后把上传路径改成自己的，像这样：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit clone https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com\ncd USERNAME.github.com\ngit remote set-url origin git@github.com:USERNAME/USERNAME.github.com.git\ngit push origin master\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这个例子中使用的是\u003ca href=\"%22https://github.com/plusjade/jekyll-bootstrap%22\"\u003ejekyll-bootstrap\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e###写文章\u003c/p\u003e\n\u003cp\u003e如果装了ruby的话，直接在文件夹下执行\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003erake post title=\u0026quot;a new post\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e就可以新建一篇文章。内容支持markdown。\u003c/p\u003e\n\u003cp\u003e其实就是在_post目录下新建了一个md文件，文件名格式为\u003ccode\u003e年-月-日-标题.md\u003c/code\u003e。 文件开始是一些元信息，比如本文的md文件开头是这样的：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e---\nlayout: post\ntitle: \u0026#34;github pages 配置\u0026#34;\ndescription: \u0026#34;rake post title=\u0026amp;quot;a new post\u0026amp;quot;\n\u003c/code\u003e\u003c/pre\u003e\u003chr\u003e\n\u003ch2 id=\"tags-jekyllgithub-pagessetup\"\u003elayout: post\ntitle: \u0026quot;github pages 配置\u0026quot;\ndescription: \u0026quot;\u0026quot;\ncategory: misc\ntags: [jekyll,github pages,setup]\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e写好了内容部分，直接`git commit`然后`git push`到master分支就可以了。\ncomments :\n\t    provider : disqus\n\t    disqus :\n\t      short_name : YOUR_DISQUS_SITE_NAME\n\t      \n你需要去disqus.com注册一个用户，然后在dashboard中新建一个站点，注意把`short_name`设置为配置文件中的那个`YOUR_DISQUS_SITE_NAME`。\n$ CHCP 65001\n如果是在git bash中的话，需要设置如下环境变量： \n\t\n\texport LC_ALL = enUS.UTF-8\n\texport LANG   = enUS.UTF-8\n然后就可以 `jekyll serve --watch`了。\ngem uninstall pygments.rb --version \u0026amp;quot;\u0026amp;gt;0.5.0\u0026amp;quot;\n\tgem install pygments.rb --version \u0026amp;quot;=0.5.0\u0026amp;quot;\u0026#34;\ncategory: misc\ntags: [jekyll,github pages,setup]\n---\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e写好了内容部分，直接\u003ccode\u003egit commit\u003c/code\u003e然后\u003ccode\u003egit push\u003c/code\u003e到master分支就可以了。\u003c/p\u003e","title":"github pages 配置"},{"content":"编辑.gemrc，内容如下：\n:bulk_threshold: 1000 :backtrace: false gemcutter_key: XXXXX gem: --no-ri --no-rdoc :benchmark: false :verbose: true :update_sources: true :sources: - http://gems.rubyforge.org/ - http://gems.opscode.com 主要起作用的是gem: --no-ri --no-rdoc,少下载了很多文档。\n","permalink":"/post/2013-07-19-gem-acceleration/","summary":"\u003cp\u003e编辑\u003ccode\u003e.gemrc\u003c/code\u003e，内容如下：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e:bulk_threshold: 1000\n:backtrace: false\ngemcutter_key: XXXXX\ngem: --no-ri --no-rdoc\n:benchmark: false\n:verbose: true\n:update_sources: true\n:sources: \n- http://gems.rubyforge.org/\n- http://gems.opscode.com\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e主要起作用的是\u003ccode\u003egem: --no-ri --no-rdoc\u003c/code\u003e,少下载了很多文档。\u003c/p\u003e","title":"为gem install 提速"},{"content":"Data description: Daily new confirmed covid cases of every province in the China mainland area.\nMove the slider to see daily data since Feburary 2020. Click on the button to travel through time.\nThe source: National Health Commitee\nData are updated weekly.\nlink\n","permalink":"/post/2022-08-08-covid-report/","summary":"\u003cp\u003eData description: Daily new confirmed covid cases of every province in the China mainland area.\u003c/p\u003e\n\u003cp\u003eMove the slider to see daily data since Feburary 2020. Click on the button to travel through time.\u003c/p\u003e\n\u003cp\u003eThe source: \u003ca href=\"http://www.nhc.gov.cn/xcs/yqtb/list_gzbd.shtml\"\u003eNational Health Commitee\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eData are updated weekly.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"/covid_report.html\"\u003elink\u003c/a\u003e\u003c/p\u003e","title":"Covid Report"},{"content":"杨帆的简历 联系方式 邮箱: vindurriel+job@gmail.com\ngithub/twitter: vindurriel\n自我介绍 男, 1987年生，现居住于北京通州区\n2010年毕业于北京邮电大学\n具有8年软件/互联网行业研发经验，熟悉内容资讯类网站、电商、抽奖、搜索引擎、抢购等系统的常用架构、轮子和设计模式，有一定项目管理经验\n设计、开发、维护过日访问量过亿的在线系统(百度文库)，以及业务流程复杂的面向企业用户的系统（百度糯米mis、b端、广告平台）\n有自然语言处理/机器学习/大数据处理经验\n英语可日常交流，笔译过两本英文技术书籍 http://product.dangdang.com/23381404.html http://product.dangdang.com/23688013.html\n技术栈 .net ELK WPF d3js git hadoop java javascript jquery markdown memcache mvc mysql nginx nmq odp openresty php python react redis shell svn Unity3D\n求职意向 互联网行业后端高级研发/架构, php/python/java 均可\n教育经历 时间|院校|专业|学历/学位 -|- 2006-2010|北京邮电大学|智能科学与技术|本科/学士\n工作经历 时间|公司|部门|职责 -|- 2018/05-今 | FreeWheel, a Comcast Company | Biz-UI 团队 | 高级软件工程师 2016/05-2018/04 | 百度 | 百度糯米研发部 | 后端研发T5 2014/05-2016/04 | 百度 | 教育事业部-产品及研发部 | 后端研发T4 2013/05-2014/04 | 安世亚太科技（北京）有限公司 | 研究院 | 研发经理 2010/09-2013/04 | 安世亚太科技（北京）有限公司 | 研究院 | 全栈研发\n项目经历 MRM, Comcast 广告系统 2018/05-今 公司/部门: Freewheel, A Comcast Company\n项目描述: 具有广告计算、内容管理、变现优化等功能的广告平台\n我负责: SSP系统（partner serivce, marketplace）设计、开发和维护\n技术栈: Golang, AWS, Kubernetes, React 16\n聚屏广告 2017/09-2018/04 公司/部门: 百度-糯米研发部 项目描述: 支持合约、rtb等多种合作模式的o2o广告平台\n我负责: 服务侧平台（ssp）的设计、开发和维护,服务商合作解决方案的设计和维护，接入广告位服务商30+，日请求十万级\n技术栈: nginx tomcat springMVC java python redis mysql\n一元夺宝 2017/04-2017/09 公司/部门: 百度-糯米研发部\n项目描述: 糯米app一元夺宝模块功能\n我负责: 后端设计、开发和维护，日活十万级，日利润十万级\n技术栈: nginx odp php redis mysql\n糯米数据分析平台 2017/03-2017/12 公司/部门: 百度-糯米研发部\n项目描述: 糯米数据分析\n我负责: 数据仓库模型、数据etl任务维护，hql任务数量1000+\n技术栈: nginx CodeIgniter php python mysql hadoop hive\n糯米储值卡 2016/05-2017/02 公司/部门: 百度-糯米研发部\n项目描述: 糯米app储值卡模块功能\n我负责: 储值卡模块的迭代开发和维护，日活十万级，日流水十万级\n技术栈: nginx odp php redis mysql hadoop hive\n百度优课 2015/10-2016/04 公司/部门: 百度-教育事业部-研发\n项目描述: 面向k12教师的教育资源平台\n我负责: 后端设计、开发和维护，pc端日访问量万级，mis端资源导入量百万级\n技术栈: nginx odp php redis nmq mysql bos\n高考在线估分平台 2015/05-2016/04 公司/部门: 百度-教育事业部-研发\n项目描述: 面向高考考生的在线估分平台，峰值日访问量1.5亿\n我负责: 估分系统的后端设计、开发和维护，包括异地多活部署、读写分离、多级缓存、队列的设计使用等等。\n技术栈: nginx odp php redis nmq mysql\n百度文库会员系统 2015/03-2016/04 公司/部门: 百度-教育事业部-研发\n项目描述: 百度文库会员系统，包含收银台、会员权益等\n我负责: 会员权益系统的后端设计、开发和维护，日利润十万级\n技术栈: nginx odp php redis nmq mysql\n百度文库运营平台 2014/05-2016/04 公司/部门: 百度-教育事业部-研发\n项目描述: 百度文库运营平台，包含文档审核、反作弊、反盗版等系统\n我负责: 文档审核、反作弊、反盗版系统的设计、开发和维护，去重后文档数量2亿，日新增文档百万级，正版文档库10万级\n技术栈: nginx odp php redis nmq mysql bos dsim\n百度文库机构系统 2014/05-2015/06 公司/部门: 百度-教育事业部-研发\n项目描述: 管理机构文档，文档下载收入和机构分成\n我负责: 机构认证、文档上传、收入结算分成等模块的设计和实现\n技术栈: nginx odp php redis nmq mysql bos\nK-Darwin知识库 2013-2014 公司/部门: 安世亚太-研究院\n项目描述: 一个知识管理系统，目标群体为企业研发人员，功能包括聚合搜索、知识发现、基于策略的知识爬虫、推荐等\n我负责: 项目管理、算法集成、数据可视化模块的设计、开发\n技术栈: IIS .net javascript d3js python mysql neo4j\n","permalink":"/resume/","summary":"\u003ch1 id=\"杨帆的简历\"\u003e杨帆的简历\u003c/h1\u003e\n\u003ch3 id=\"联系方式\"\u003e联系方式\u003c/h3\u003e\n\u003cp\u003e邮箱: \u003ca href=\"mailto:vindurriel+job@gmail.com\"\u003evindurriel+job@gmail.com\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003egithub/twitter: vindurriel\u003c/p\u003e\n\u003ch3 id=\"自我介绍\"\u003e自我介绍\u003c/h3\u003e\n\u003cp\u003e男, 1987年生，现居住于北京通州区\u003c/p\u003e\n\u003cp\u003e2010年毕业于北京邮电大学\u003c/p\u003e\n\u003cp\u003e具有8年软件/互联网行业研发经验，熟悉内容资讯类网站、电商、抽奖、搜索引擎、抢购等系统的常用架构、轮子和设计模式，有一定项目管理经验\u003c/p\u003e\n\u003cp\u003e设计、开发、维护过日访问量过亿的在线系统(百度文库)，以及业务流程复杂的面向企业用户的系统（百度糯米mis、b端、广告平台）\u003c/p\u003e\n\u003cp\u003e有自然语言处理/机器学习/大数据处理经验\u003c/p\u003e\n\u003cp\u003e英语可日常交流，笔译过两本英文技术书籍 \u003ca href=\"http://product.dangdang.com/23381404.html\"\u003ehttp://product.dangdang.com/23381404.html\u003c/a\u003e \u003ca href=\"http://product.dangdang.com/23688013.html\"\u003ehttp://product.dangdang.com/23688013.html\u003c/a\u003e\u003c/p\u003e\n\u003ch3 id=\"技术栈\"\u003e技术栈\u003c/h3\u003e\n\u003cp\u003e.net ELK WPF d3js git hadoop java javascript jquery markdown memcache mvc mysql nginx nmq odp openresty php python react redis shell svn Unity3D\u003c/p\u003e\n\u003ch3 id=\"求职意向\"\u003e求职意向\u003c/h3\u003e\n\u003cp\u003e互联网行业后端高级研发/架构, php/python/java 均可\u003c/p\u003e\n\u003ch3 id=\"教育经历\"\u003e教育经历\u003c/h3\u003e\n\u003cp\u003e时间|院校|专业|学历/学位\n-|-\n2006-2010|北京邮电大学|智能科学与技术|本科/学士\u003c/p\u003e\n\u003ch3 id=\"工作经历\"\u003e工作经历\u003c/h3\u003e\n\u003cp\u003e时间|公司|部门|职责\n-|-\n2018/05-今 | FreeWheel, a Comcast Company | Biz-UI 团队 | 高级软件工程师\n2016/05-2018/04 | 百度 | 百度糯米研发部 | 后端研发T5\n2014/05-2016/04 | 百度 | 教育事业部-产品及研发部 | 后端研发T4\n2013/05-2014/04 | 安世亚太科技（北京）有限公司 | 研究院 | 研发经理\n2010/09-2013/04 | 安世亚太科技（北京）有限公司 | 研究院 | 全栈研发\u003c/p\u003e","title":""},{"content":"Fan YANG\u0026rsquo;s resume Contact email: vindurriel+job@gmail.com\ngithub: vindurriel\nAbout me Male, born in 1987, currently resides in Tongzhou District, Beijing, China\nGraduated and got bachelor\u0026rsquo;s degree from Beijing University of Posts and Telecommunications in 2010\nYears of research and development experience in software/internet industry, familiar with common architectures, frameworks and design patterns of content/info website, e-commercials, digital lottery, high concurrency systems, etc. had some experience in product managements.\nExpertised in designing, developing and maitaining online systems which has a page view of over 100 million per day (https://wenku.baidu.com), as well as enterprise client oriented systems with complicated business logic (e.g. nuomi app\u0026rsquo;s admin system/to-b app/advertise platform).\nHave some experience with natural language processing ( NLP ) / machine learning / and general big data etl tasks.\nCan speak and write English, translated two techinical books from English to Chinese ( http://product.dangdang.com/23381404.html http://product.dangdang.com/23688013.html)\nTechnical skills .net ELK WPF d3js git golang hadoop java javascript jquery markdown memcache mvc mysql nginx nmq odp openresty php python react redis shell svn swift Unity3D\nJob preference Lead r\u0026amp;d / architecture in the internet industry, can code in golang/php/python/java\nEducation history date|university|major|degree -|- 2006-2010|Beijing University of Posts and Telecommunications|Artificial Intelligence|bachelor\u0026rsquo;s\nCareer history date|company|business unit|role -|- 2018/05-now | FreeWheel, a Comcast Company | Biz-UI department | senior software engineer 2016/05-2018/04 | Baidu | Nuomi | senior backend r\u0026amp;d 2014/05-2016/04 | Baidu | Education | backend r\u0026amp;d 2013/05-2014/04 | Pera Global | Institute of Research | project manager 2010/09-2013/04 | Pera Global | Institute of Research | full stack developer\nProject history MRM, Comcast\u0026rsquo;s advertising system 2018/05-now In: Freewheel, A Comcast Company\nDescription: an advertising platform for ad serving, inventory managements, yield optimization and more.\nMy work: design, development and maintainence of support-side plaform (partner service, marketplace)\nSkills involved : Golang, AWS, Kubernetes, React 16\nJuping advertise platform 2017/09-now In: Nuomi, Baidu\nDescription: an o2o advertise platform supporting contract and rtb mode\nMy work: design, development and maintainence of support-side plaform (ssp); design and maintainence of a technical co-operation solution which supports over 30 advertise media providers with daily query of over 100k\nSkills involved : nginx tomcat springMVC java python redis mysql\nOne-yuan Crowd Funding 2017/04-2017/09 In: Nuomi, Baidu\nDescription: One-yuan Crowd Funding in Nuomi app\nMy work: design, development and maintainence of a backend system with 100k daily active users and 100k yuan daily profit.\nSkills involved: nginx odp php redis mysql\nData Analysis Plaform for Nuomi app 2017/03-2017/12 In: Nuomi, Baidu\nDescription: Data Analysis Plaform for Nuomi app\nMy work: Data Warehouse Models management, directly maintaining over 1000 hive etl and scheduling tasks\nSkills involved: nginx CodeIgniter php python mysql hadoop hive\nMember Card of Nuomi app 2016/05-2017/02 In: Nuomi, Baidu\nDescription: Member Card of Nuomi app\nMy work: development and maintainence of backend systems with 100k daily active users and 100k yuan daily turnover\nSkills involved: nginx odp php redis mysql hadoop hive\nyouke.baidu.com 2015/10-2016/04 In: Education, Baidu\nDescription: an education resources sharing platform for k-12 teachers\nMy work: development and maintainence of backend systems with 10k daily page view and over 1 million education resources\nSkills involved: nginx odp php redis nmq mysql bos\nScore Estimation Platform for Gaokao 2015/05-2016/04 In: Education, Baidu\nDescription: a score estimation platform for National College Entrance Examination participants, with over 100 million daily page views at peak\nMy work: design, development and maintainence of score estimation service, tackling technical issues with multi-regional server deloyment, read/write flow segregation, multi-level caching and queueing, etc\nSkills involved: nginx odp php redis nmq mysql\nMembership Systems of wenku.baidu.com 2015/03-2016/04 In: Education, Baidu\nDescription: Membership Systems of wenku.baidu.com\nMy work: design, development and maintainence of Membership Privilege system, with 100k yuan daily profit\nSkills involved: nginx odp php redis nmq mysql\nAdmin Systems of wenku.baidu.com 2014/05-2016/04 In: Education, Baidu\nDescription: Admin Systems of wenku.baidu.com, including document auditing, anti-spam, anti-piracy, etc\nMy work: design, development and maintainence of document auditing, anti-spam and anti-piracy systems\nSkills involved: nginx odp php redis nmq mysql bos dsim\nOrganization System of wenku.baidu.com 2014/05-2015/06 In: Education, Baidu\nDescription: Organization System of wenku.baidu.com, managing documents of organization accounts, and income sharing between business partners\nMy work: design, development and maintainence of organization verification, document uploading and income sharing\nSkills involved: nginx odp php redis nmq mysql bos\nK-Darwin, a knowledge management system 2013-2014 In: Institute of Research, Pera global\nDescription: a knowledge management system for enterprise research staff, featuring aggregating search, knowledge discovery, rule-based knowledge spiders and content recommendation.\nMy work: project management; design and development of algorithm intergration and data visualization systems\nSkills involved: IIS .net javascript d3js python mysql neo4j\n","permalink":"/resume_en/","summary":"\u003ch1 id=\"fan-yangs-resume\"\u003eFan YANG\u0026rsquo;s resume\u003c/h1\u003e\n\u003ch3 id=\"contact\"\u003eContact\u003c/h3\u003e\n\u003cp\u003eemail: \u003ca href=\"mailto:vindurriel+job@gmail.com\"\u003evindurriel+job@gmail.com\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003egithub: vindurriel\u003c/p\u003e\n\u003ch3 id=\"about-me\"\u003eAbout me\u003c/h3\u003e\n\u003cp\u003eMale, born in 1987, currently resides in Tongzhou District, Beijing, China\u003c/p\u003e\n\u003cp\u003eGraduated and got bachelor\u0026rsquo;s degree from Beijing University of Posts and Telecommunications in 2010\u003c/p\u003e\n\u003cp\u003eYears of research and development experience in software/internet industry, familiar with common architectures, frameworks and design patterns of content/info website,\ne-commercials, digital lottery, high concurrency systems, etc. had some experience in product managements.\u003c/p\u003e\n\u003cp\u003eExpertised in designing, developing and maitaining online systems which has a page view of over 100 million per day (\u003ca href=\"https://wenku.baidu.com\"\u003ehttps://wenku.baidu.com\u003c/a\u003e), as well as enterprise client oriented systems\nwith complicated business logic (e.g. nuomi app\u0026rsquo;s admin system/to-b app/advertise platform).\u003c/p\u003e","title":""}]