<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Book on vindurriel</title>
    <link>https://vindurriel.github.io/en/tags/book/</link>
    <description>Recent content in Book on vindurriel</description>
    <generator>Hugo -- 0.151.0</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 20 Oct 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://vindurriel.github.io/en/tags/book/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chapter 5. Distributed Transactions</title>
      <link>https://vindurriel.github.io/en/post/dtx/</link>
      <pubDate>Tue, 20 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://vindurriel.github.io/en/post/dtx/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Disclaimer: this is the manuscript of a chapter in a published technical book: &lt;a href=&#34;https://www.amazon.com/Cloud-Native-Application-Architecture-Microservice-Development-ebook/dp/B0BS3BK37F&#34;&gt;Cloud-Native Application Architecture: Microservice Development Best Practice&lt;/a&gt; which is co-authored by several of my ex-colleagues at FreeWheel.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;As software systems move from monolithic applications to microservices and cloud-native services, and with the trend of decentralized and heterogeneous database selection, can ACID transactions, previously built on monolithic applications and single traditional relational databases, achieve the same functionality on distributed systems and diverse databases? If so, what pitfalls and considerations are essential in the transitional mindset? This chapter will introduce our teamâ€™s experience and practice pertaining to the technical topic of distributed transactions.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
